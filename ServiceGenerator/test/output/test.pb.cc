// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message1 {

namespace {

const ::google::protobuf::Descriptor* c_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c_reflection_ = NULL;
const ::google::protobuf::Descriptor* c_c1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c_c1_reflection_ = NULL;
const ::google::protobuf::Descriptor* c_c1_c2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c_c1_c2_reflection_ = NULL;
const ::google::protobuf::Descriptor* c_c1_c2_c3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c_c1_c2_c3_reflection_ = NULL;
const ::google::protobuf::Descriptor* c_c1_c2_c3_c3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c_c1_c2_c3_c3_reflection_ = NULL;
const ::google::protobuf::Descriptor* InternalMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InternalMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* InternalMessage_a1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InternalMessage_a1_reflection_ = NULL;
const ::google::protobuf::Descriptor* InternalMessage_a1_a2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InternalMessage_a1_a2_reflection_ = NULL;
const ::google::protobuf::Descriptor* InternalMessage_a1_a2_a3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InternalMessage_a1_a2_a3_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor_ = NULL;
const ::google::protobuf::Descriptor* c1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  c1_reflection_ = NULL;
const ::google::protobuf::Descriptor* AAAA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AAAA_reflection_ = NULL;
const ::google::protobuf::Descriptor* Imagine_Rpc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Imagine_Rpc_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTTT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTTT_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* aslkfj_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  c_descriptor_ = file->message_type(0);
  static const int c_offsets_[1] = {
  };
  c_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c_descriptor_,
      c::default_instance_,
      c_offsets_,
      -1,
      -1,
      -1,
      sizeof(c),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c, _is_default_instance_));
  c_c1_descriptor_ = c_descriptor_->nested_type(0);
  static const int c_c1_offsets_[1] = {
  };
  c_c1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c_c1_descriptor_,
      c_c1::default_instance_,
      c_c1_offsets_,
      -1,
      -1,
      -1,
      sizeof(c_c1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1, _is_default_instance_));
  c_c1_c2_descriptor_ = c_c1_descriptor_->nested_type(0);
  static const int c_c1_c2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2, kk_),
  };
  c_c1_c2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c_c1_c2_descriptor_,
      c_c1_c2::default_instance_,
      c_c1_c2_offsets_,
      -1,
      -1,
      -1,
      sizeof(c_c1_c2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2, _is_default_instance_));
  c_c1_c2_c3_descriptor_ = c_c1_c2_descriptor_->nested_type(0);
  static const int c_c1_c2_c3_offsets_[1] = {
  };
  c_c1_c2_c3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c_c1_c2_c3_descriptor_,
      c_c1_c2_c3::default_instance_,
      c_c1_c2_c3_offsets_,
      -1,
      -1,
      -1,
      sizeof(c_c1_c2_c3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2_c3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2_c3, _is_default_instance_));
  c_c1_c2_c3_c3_descriptor_ = c_c1_c2_c3_descriptor_->nested_type(0);
  static const int c_c1_c2_c3_c3_offsets_[1] = {
  };
  c_c1_c2_c3_c3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c_c1_c2_c3_c3_descriptor_,
      c_c1_c2_c3_c3::default_instance_,
      c_c1_c2_c3_c3_offsets_,
      -1,
      -1,
      -1,
      sizeof(c_c1_c2_c3_c3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2_c3_c3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c_c1_c2_c3_c3, _is_default_instance_));
  InternalMessage_descriptor_ = file->message_type(1);
  static const int InternalMessage_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, tttt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, kk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, cbcbcbcbcbcbcbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, service_name__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, method_name__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, request_type__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, server_ip__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, server_port__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, abcdefg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, ffffffffff_),
  };
  InternalMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InternalMessage_descriptor_,
      InternalMessage::default_instance_,
      InternalMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(InternalMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, _is_default_instance_));
  InternalMessage_a1_descriptor_ = InternalMessage_descriptor_->nested_type(0);
  static const int InternalMessage_a1_offsets_[1] = {
  };
  InternalMessage_a1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InternalMessage_a1_descriptor_,
      InternalMessage_a1::default_instance_,
      InternalMessage_a1_offsets_,
      -1,
      -1,
      -1,
      sizeof(InternalMessage_a1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1, _is_default_instance_));
  InternalMessage_a1_a2_descriptor_ = InternalMessage_a1_descriptor_->nested_type(0);
  static const int InternalMessage_a1_a2_offsets_[1] = {
  };
  InternalMessage_a1_a2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InternalMessage_a1_a2_descriptor_,
      InternalMessage_a1_a2::default_instance_,
      InternalMessage_a1_a2_offsets_,
      -1,
      -1,
      -1,
      sizeof(InternalMessage_a1_a2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1_a2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1_a2, _is_default_instance_));
  InternalMessage_a1_a2_a3_descriptor_ = InternalMessage_a1_a2_descriptor_->nested_type(0);
  static const int InternalMessage_a1_a2_a3_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1_a2_a3, kk_),
  };
  InternalMessage_a1_a2_a3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InternalMessage_a1_a2_a3_descriptor_,
      InternalMessage_a1_a2_a3::default_instance_,
      InternalMessage_a1_a2_a3_offsets_,
      -1,
      -1,
      -1,
      sizeof(InternalMessage_a1_a2_a3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1_a2_a3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage_a1_a2_a3, _is_default_instance_));
  InternalMessage_Request_descriptor_ = InternalMessage_descriptor_->enum_type(0);
  InternalMessage_Identity_descriptor_ = InternalMessage_descriptor_->enum_type(1);
  c1_descriptor_ = file->message_type(2);
  static const int c1_offsets_[1] = {
  };
  c1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      c1_descriptor_,
      c1::default_instance_,
      c1_offsets_,
      -1,
      -1,
      -1,
      sizeof(c1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(c1, _is_default_instance_));
  AAAA_descriptor_ = file->message_type(3);
  static const int AAAA_offsets_[1] = {
  };
  AAAA_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AAAA_descriptor_,
      AAAA::default_instance_,
      AAAA_offsets_,
      -1,
      -1,
      -1,
      sizeof(AAAA),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AAAA, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AAAA, _is_default_instance_));
  Imagine_Rpc_descriptor_ = file->message_type(4);
  static const int Imagine_Rpc_offsets_[1] = {
  };
  Imagine_Rpc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Imagine_Rpc_descriptor_,
      Imagine_Rpc::default_instance_,
      Imagine_Rpc_offsets_,
      -1,
      -1,
      -1,
      sizeof(Imagine_Rpc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Imagine_Rpc, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Imagine_Rpc, _is_default_instance_));
  TTTT_descriptor_ = file->message_type(5);
  static const int TTTT_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTTT, taaa_),
  };
  TTTT_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TTTT_descriptor_,
      TTTT::default_instance_,
      TTTT_offsets_,
      -1,
      -1,
      -1,
      sizeof(TTTT),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTTT, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTTT, _is_default_instance_));
  aslkfj_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c_descriptor_, &c::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c_c1_descriptor_, &c_c1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c_c1_c2_descriptor_, &c_c1_c2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c_c1_c2_c3_descriptor_, &c_c1_c2_c3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c_c1_c2_c3_c3_descriptor_, &c_c1_c2_c3_c3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InternalMessage_descriptor_, &InternalMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InternalMessage_a1_descriptor_, &InternalMessage_a1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InternalMessage_a1_a2_descriptor_, &InternalMessage_a1_a2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InternalMessage_a1_a2_a3_descriptor_, &InternalMessage_a1_a2_a3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      c1_descriptor_, &c1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AAAA_descriptor_, &AAAA::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Imagine_Rpc_descriptor_, &Imagine_Rpc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TTTT_descriptor_, &TTTT::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete c::default_instance_;
  delete c_reflection_;
  delete c_c1::default_instance_;
  delete c_c1_reflection_;
  delete c_c1_c2::default_instance_;
  delete c_c1_c2_reflection_;
  delete c_c1_c2_c3::default_instance_;
  delete c_c1_c2_c3_reflection_;
  delete c_c1_c2_c3_c3::default_instance_;
  delete c_c1_c2_c3_c3_reflection_;
  delete InternalMessage::default_instance_;
  delete InternalMessage_reflection_;
  delete InternalMessage_a1::default_instance_;
  delete InternalMessage_a1_reflection_;
  delete InternalMessage_a1_a2::default_instance_;
  delete InternalMessage_a1_a2_reflection_;
  delete InternalMessage_a1_a2_a3::default_instance_;
  delete InternalMessage_a1_a2_a3_reflection_;
  delete c1::default_instance_;
  delete c1_reflection_;
  delete AAAA::default_instance_;
  delete AAAA_reflection_;
  delete Imagine_Rpc::default_instance_;
  delete Imagine_Rpc_reflection_;
  delete TTTT::default_instance_;
  delete TTTT_reflection_;
}

void protobuf_AddDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::import_package2::protobuf_AddDesc_test_5fimport2_2ea_2eproto();
  ::import_package1::protobuf_AddDesc_test_5fimport_2ea_2eproto();
  ::import_package::protobuf_AddDesc_test_5fimport_2eproto();
  ::protobuf_AddDesc_test_5fimport2_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\010message1\032\024test_import2.a.p"
    "roto\032\023test_import.a.proto\032\021test_import.p"
    "roto\032\022test_import2.proto\":\n\001c\0325\n\002c1\032/\n\002c"
    "2\022\035\n\002kk\030\001 \001(\0132\021.message1.c.c1.c2\032\n\n\002c3\032\004"
    "\n\002c3\"\263\005\n\017InternalMessage\022\036\n\004TTTT\030\213\225\006 \001(\013"
    "2\016.message1.TTTT\022-\n\002kk\030\265\204\002 \001(\0132\037.message"
    "1.InternalMessage.a1.a2\022(\n\017cbcbcbcbcbcbc"
    "bc\030\350\007 \001(\0132\016.message1.AAAA\022:\n\016send_identi"
    "ty_\030\001 \001(\0162\".message1.InternalMessage.Ide"
    "ntity\022:\n\016recv_identity_\030\002 \001(\0162\".message1"
    ".InternalMessage.Identity\022\025\n\rservice_nam"
    "e_\030\003 \001(\t\022\024\n\014method_name_\030\004 \001(\t\0228\n\rreques"
    "t_type_\030\006 \001(\0162!.message1.InternalMessage"
    ".Request\022\022\n\nserver_ip_\030\t \001(\t\022\024\n\014server_p"
    "ort_\030\n \001(\t\022!\n\007ABCDEFG\030\240\215\006 \001(\0132\016.message1"
    ".TTTT\0227\n\nFFFFFFFFFF\030\205\032 \001(\0162\".message1.In"
    "ternalMessage.Identity\032=\n\002a1\0327\n\002a2\0321\n\002a3"
    "\022+\n\002kk\030! \001(\0132\037.message1.InternalMessage."
    "a1.a2\"P\n\007Request\022\014\n\010Register\020\000\022\016\n\nDeRegi"
    "ster\020\001\022\r\n\tHeartbeat\020\002\022\n\n\006Search\020\003\022\014\n\010Res"
    "ponse\020\004\"1\n\010Identity\022\n\n\006Client\020\000\022\n\n\006Serve"
    "r\020\001\022\r\n\tZooKeeper\020\002\"\004\n\002c1\"\006\n\004AAAA\"\r\n\013Imag"
    "ine_Rpc\"8\n\004TTTT\0220\n\004taaa\030\002 \001(\0162\".message1"
    ".InternalMessage.Identity*\021\n\006aslkfj\022\007\n\003a"
    "aa\020\000b\006proto3", 972);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  c::default_instance_ = new c();
  c_c1::default_instance_ = new c_c1();
  c_c1_c2::default_instance_ = new c_c1_c2();
  c_c1_c2_c3::default_instance_ = new c_c1_c2_c3();
  c_c1_c2_c3_c3::default_instance_ = new c_c1_c2_c3_c3();
  InternalMessage::default_instance_ = new InternalMessage();
  InternalMessage_a1::default_instance_ = new InternalMessage_a1();
  InternalMessage_a1_a2::default_instance_ = new InternalMessage_a1_a2();
  InternalMessage_a1_a2_a3::default_instance_ = new InternalMessage_a1_a2_a3();
  c1::default_instance_ = new c1();
  AAAA::default_instance_ = new AAAA();
  Imagine_Rpc::default_instance_ = new Imagine_Rpc();
  TTTT::default_instance_ = new TTTT();
  c::default_instance_->InitAsDefaultInstance();
  c_c1::default_instance_->InitAsDefaultInstance();
  c_c1_c2::default_instance_->InitAsDefaultInstance();
  c_c1_c2_c3::default_instance_->InitAsDefaultInstance();
  c_c1_c2_c3_c3::default_instance_->InitAsDefaultInstance();
  InternalMessage::default_instance_->InitAsDefaultInstance();
  InternalMessage_a1::default_instance_->InitAsDefaultInstance();
  InternalMessage_a1_a2::default_instance_->InitAsDefaultInstance();
  InternalMessage_a1_a2_a3::default_instance_->InitAsDefaultInstance();
  c1::default_instance_->InitAsDefaultInstance();
  AAAA::default_instance_->InitAsDefaultInstance();
  Imagine_Rpc::default_instance_->InitAsDefaultInstance();
  TTTT::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;
const ::google::protobuf::EnumDescriptor* aslkfj_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return aslkfj_descriptor_;
}
bool aslkfj_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_c1_c2_c3_c3::c_c1_c2_c3_c3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c.c1.c2.c3.c3)
}

void c_c1_c2_c3_c3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

c_c1_c2_c3_c3::c_c1_c2_c3_c3(const c_c1_c2_c3_c3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c.c1.c2.c3.c3)
}

void c_c1_c2_c3_c3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

c_c1_c2_c3_c3::~c_c1_c2_c3_c3() {
  // @@protoc_insertion_point(destructor:message1.c.c1.c2.c3.c3)
  SharedDtor();
}

void c_c1_c2_c3_c3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void c_c1_c2_c3_c3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_c1_c2_c3_c3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_c1_c2_c3_c3_descriptor_;
}

const c_c1_c2_c3_c3& c_c1_c2_c3_c3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c_c1_c2_c3_c3* c_c1_c2_c3_c3::default_instance_ = NULL;

c_c1_c2_c3_c3* c_c1_c2_c3_c3::New(::google::protobuf::Arena* arena) const {
  c_c1_c2_c3_c3* n = new c_c1_c2_c3_c3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c_c1_c2_c3_c3::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c.c1.c2.c3.c3)
}

bool c_c1_c2_c3_c3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c.c1.c2.c3.c3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c.c1.c2.c3.c3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c.c1.c2.c3.c3)
  return false;
#undef DO_
}

void c_c1_c2_c3_c3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c.c1.c2.c3.c3)
  // @@protoc_insertion_point(serialize_end:message1.c.c1.c2.c3.c3)
}

::google::protobuf::uint8* c_c1_c2_c3_c3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c.c1.c2.c3.c3)
  // @@protoc_insertion_point(serialize_to_array_end:message1.c.c1.c2.c3.c3)
  return target;
}

int c_c1_c2_c3_c3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c.c1.c2.c3.c3)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_c1_c2_c3_c3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c.c1.c2.c3.c3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c_c1_c2_c3_c3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c_c1_c2_c3_c3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c.c1.c2.c3.c3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c.c1.c2.c3.c3)
    MergeFrom(*source);
  }
}

void c_c1_c2_c3_c3::MergeFrom(const c_c1_c2_c3_c3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c.c1.c2.c3.c3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void c_c1_c2_c3_c3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c.c1.c2.c3.c3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_c1_c2_c3_c3::CopyFrom(const c_c1_c2_c3_c3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c.c1.c2.c3.c3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_c1_c2_c3_c3::IsInitialized() const {

  return true;
}

void c_c1_c2_c3_c3::Swap(c_c1_c2_c3_c3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_c1_c2_c3_c3::InternalSwap(c_c1_c2_c3_c3* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_c1_c2_c3_c3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c_c1_c2_c3_c3_descriptor_;
  metadata.reflection = c_c1_c2_c3_c3_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_c1_c2_c3::c_c1_c2_c3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c.c1.c2.c3)
}

void c_c1_c2_c3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

c_c1_c2_c3::c_c1_c2_c3(const c_c1_c2_c3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c.c1.c2.c3)
}

void c_c1_c2_c3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

c_c1_c2_c3::~c_c1_c2_c3() {
  // @@protoc_insertion_point(destructor:message1.c.c1.c2.c3)
  SharedDtor();
}

void c_c1_c2_c3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void c_c1_c2_c3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_c1_c2_c3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_c1_c2_c3_descriptor_;
}

const c_c1_c2_c3& c_c1_c2_c3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c_c1_c2_c3* c_c1_c2_c3::default_instance_ = NULL;

c_c1_c2_c3* c_c1_c2_c3::New(::google::protobuf::Arena* arena) const {
  c_c1_c2_c3* n = new c_c1_c2_c3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c_c1_c2_c3::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c.c1.c2.c3)
}

bool c_c1_c2_c3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c.c1.c2.c3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c.c1.c2.c3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c.c1.c2.c3)
  return false;
#undef DO_
}

void c_c1_c2_c3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c.c1.c2.c3)
  // @@protoc_insertion_point(serialize_end:message1.c.c1.c2.c3)
}

::google::protobuf::uint8* c_c1_c2_c3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c.c1.c2.c3)
  // @@protoc_insertion_point(serialize_to_array_end:message1.c.c1.c2.c3)
  return target;
}

int c_c1_c2_c3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c.c1.c2.c3)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_c1_c2_c3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c.c1.c2.c3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c_c1_c2_c3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c_c1_c2_c3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c.c1.c2.c3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c.c1.c2.c3)
    MergeFrom(*source);
  }
}

void c_c1_c2_c3::MergeFrom(const c_c1_c2_c3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c.c1.c2.c3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void c_c1_c2_c3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c.c1.c2.c3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_c1_c2_c3::CopyFrom(const c_c1_c2_c3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c.c1.c2.c3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_c1_c2_c3::IsInitialized() const {

  return true;
}

void c_c1_c2_c3::Swap(c_c1_c2_c3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_c1_c2_c3::InternalSwap(c_c1_c2_c3* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_c1_c2_c3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c_c1_c2_c3_descriptor_;
  metadata.reflection = c_c1_c2_c3_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int c_c1_c2::kKkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_c1_c2::c_c1_c2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c.c1.c2)
}

void c_c1_c2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  kk_ = const_cast< ::message1::c_c1_c2*>(&::message1::c_c1_c2::default_instance());
}

c_c1_c2::c_c1_c2(const c_c1_c2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c.c1.c2)
}

void c_c1_c2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  kk_ = NULL;
}

c_c1_c2::~c_c1_c2() {
  // @@protoc_insertion_point(destructor:message1.c.c1.c2)
  SharedDtor();
}

void c_c1_c2::SharedDtor() {
  if (this != default_instance_) {
    delete kk_;
  }
}

void c_c1_c2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_c1_c2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_c1_c2_descriptor_;
}

const c_c1_c2& c_c1_c2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c_c1_c2* c_c1_c2::default_instance_ = NULL;

c_c1_c2* c_c1_c2::New(::google::protobuf::Arena* arena) const {
  c_c1_c2* n = new c_c1_c2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c_c1_c2::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c.c1.c2)
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}

bool c_c1_c2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c.c1.c2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .message1.c.c1.c2 kk = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c.c1.c2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c.c1.c2)
  return false;
#undef DO_
}

void c_c1_c2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c.c1.c2)
  // optional .message1.c.c1.c2 kk = 1;
  if (this->has_kk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->kk_, output);
  }

  // @@protoc_insertion_point(serialize_end:message1.c.c1.c2)
}

::google::protobuf::uint8* c_c1_c2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c.c1.c2)
  // optional .message1.c.c1.c2 kk = 1;
  if (this->has_kk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->kk_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:message1.c.c1.c2)
  return target;
}

int c_c1_c2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c.c1.c2)
  int total_size = 0;

  // optional .message1.c.c1.c2 kk = 1;
  if (this->has_kk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kk_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_c1_c2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c.c1.c2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c_c1_c2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c_c1_c2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c.c1.c2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c.c1.c2)
    MergeFrom(*source);
  }
}

void c_c1_c2::MergeFrom(const c_c1_c2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c.c1.c2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_kk()) {
    mutable_kk()->::message1::c_c1_c2::MergeFrom(from.kk());
  }
}

void c_c1_c2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c.c1.c2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_c1_c2::CopyFrom(const c_c1_c2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c.c1.c2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_c1_c2::IsInitialized() const {

  return true;
}

void c_c1_c2::Swap(c_c1_c2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_c1_c2::InternalSwap(c_c1_c2* other) {
  std::swap(kk_, other->kk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_c1_c2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c_c1_c2_descriptor_;
  metadata.reflection = c_c1_c2_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_c1::c_c1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c.c1)
}

void c_c1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

c_c1::c_c1(const c_c1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c.c1)
}

void c_c1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

c_c1::~c_c1() {
  // @@protoc_insertion_point(destructor:message1.c.c1)
  SharedDtor();
}

void c_c1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void c_c1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_c1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_c1_descriptor_;
}

const c_c1& c_c1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c_c1* c_c1::default_instance_ = NULL;

c_c1* c_c1::New(::google::protobuf::Arena* arena) const {
  c_c1* n = new c_c1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c_c1::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c.c1)
}

bool c_c1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c.c1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c.c1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c.c1)
  return false;
#undef DO_
}

void c_c1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c.c1)
  // @@protoc_insertion_point(serialize_end:message1.c.c1)
}

::google::protobuf::uint8* c_c1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c.c1)
  // @@protoc_insertion_point(serialize_to_array_end:message1.c.c1)
  return target;
}

int c_c1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c.c1)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_c1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c.c1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c_c1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c_c1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c.c1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c.c1)
    MergeFrom(*source);
  }
}

void c_c1::MergeFrom(const c_c1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c.c1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void c_c1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c.c1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_c1::CopyFrom(const c_c1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c.c1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_c1::IsInitialized() const {

  return true;
}

void c_c1::Swap(c_c1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_c1::InternalSwap(c_c1* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_c1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c_c1_descriptor_;
  metadata.reflection = c_c1_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c::c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c)
}

void c::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

c::c(const c& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c)
}

void c::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

c::~c() {
  // @@protoc_insertion_point(destructor:message1.c)
  SharedDtor();
}

void c::SharedDtor() {
  if (this != default_instance_) {
  }
}

void c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_descriptor_;
}

const c& c::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c* c::default_instance_ = NULL;

c* c::New(::google::protobuf::Arena* arena) const {
  c* n = new c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c)
}

bool c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c)
  return false;
#undef DO_
}

void c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c)
  // @@protoc_insertion_point(serialize_end:message1.c)
}

::google::protobuf::uint8* c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c)
  // @@protoc_insertion_point(serialize_to_array_end:message1.c)
  return target;
}

int c::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c)
    MergeFrom(*source);
  }
}

void c::MergeFrom(const c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c::CopyFrom(const c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c::IsInitialized() const {

  return true;
}

void c::Swap(c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c::InternalSwap(c* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c_descriptor_;
  metadata.reflection = c_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// c_c1_c2_c3_c3

// -------------------------------------------------------------------

// c_c1_c2_c3

// -------------------------------------------------------------------

// c_c1_c2

// optional .message1.c.c1.c2 kk = 1;
bool c_c1_c2::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
void c_c1_c2::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
const ::message1::c_c1_c2& c_c1_c2::kk() const {
  // @@protoc_insertion_point(field_get:message1.c.c1.c2.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
::message1::c_c1_c2* c_c1_c2::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::c_c1_c2;
  }
  // @@protoc_insertion_point(field_mutable:message1.c.c1.c2.kk)
  return kk_;
}
::message1::c_c1_c2* c_c1_c2::release_kk() {
  // @@protoc_insertion_point(field_release:message1.c.c1.c2.kk)
  
  ::message1::c_c1_c2* temp = kk_;
  kk_ = NULL;
  return temp;
}
void c_c1_c2::set_allocated_kk(::message1::c_c1_c2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.c.c1.c2.kk)
}

// -------------------------------------------------------------------

// c_c1

// -------------------------------------------------------------------

// c

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_Request_descriptor_;
}
bool InternalMessage_Request_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InternalMessage_Request InternalMessage::Register;
const InternalMessage_Request InternalMessage::DeRegister;
const InternalMessage_Request InternalMessage::Heartbeat;
const InternalMessage_Request InternalMessage::Search;
const InternalMessage_Request InternalMessage::Response;
const InternalMessage_Request InternalMessage::Request_MIN;
const InternalMessage_Request InternalMessage::Request_MAX;
const int InternalMessage::Request_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_Identity_descriptor_;
}
bool InternalMessage_Identity_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InternalMessage_Identity InternalMessage::Client;
const InternalMessage_Identity InternalMessage::Server;
const InternalMessage_Identity InternalMessage::ZooKeeper;
const InternalMessage_Identity InternalMessage::Identity_MIN;
const InternalMessage_Identity InternalMessage::Identity_MAX;
const int InternalMessage::Identity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InternalMessage_a1_a2_a3::kKkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMessage_a1_a2_a3::InternalMessage_a1_a2_a3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.InternalMessage.a1.a2.a3)
}

void InternalMessage_a1_a2_a3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  kk_ = const_cast< ::message1::InternalMessage_a1_a2*>(&::message1::InternalMessage_a1_a2::default_instance());
}

InternalMessage_a1_a2_a3::InternalMessage_a1_a2_a3(const InternalMessage_a1_a2_a3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.InternalMessage.a1.a2.a3)
}

void InternalMessage_a1_a2_a3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  kk_ = NULL;
}

InternalMessage_a1_a2_a3::~InternalMessage_a1_a2_a3() {
  // @@protoc_insertion_point(destructor:message1.InternalMessage.a1.a2.a3)
  SharedDtor();
}

void InternalMessage_a1_a2_a3::SharedDtor() {
  if (this != default_instance_) {
    delete kk_;
  }
}

void InternalMessage_a1_a2_a3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMessage_a1_a2_a3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_a1_a2_a3_descriptor_;
}

const InternalMessage_a1_a2_a3& InternalMessage_a1_a2_a3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

InternalMessage_a1_a2_a3* InternalMessage_a1_a2_a3::default_instance_ = NULL;

InternalMessage_a1_a2_a3* InternalMessage_a1_a2_a3::New(::google::protobuf::Arena* arena) const {
  InternalMessage_a1_a2_a3* n = new InternalMessage_a1_a2_a3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMessage_a1_a2_a3::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.InternalMessage.a1.a2.a3)
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}

bool InternalMessage_a1_a2_a3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.InternalMessage.a1.a2.a3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .message1.InternalMessage.a1.a2 kk = 33;
      case 33: {
        if (tag == 266) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message1.InternalMessage.a1.a2.a3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.InternalMessage.a1.a2.a3)
  return false;
#undef DO_
}

void InternalMessage_a1_a2_a3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.InternalMessage.a1.a2.a3)
  // optional .message1.InternalMessage.a1.a2 kk = 33;
  if (this->has_kk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, *this->kk_, output);
  }

  // @@protoc_insertion_point(serialize_end:message1.InternalMessage.a1.a2.a3)
}

::google::protobuf::uint8* InternalMessage_a1_a2_a3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.InternalMessage.a1.a2.a3)
  // optional .message1.InternalMessage.a1.a2 kk = 33;
  if (this->has_kk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33, *this->kk_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:message1.InternalMessage.a1.a2.a3)
  return target;
}

int InternalMessage_a1_a2_a3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.InternalMessage.a1.a2.a3)
  int total_size = 0;

  // optional .message1.InternalMessage.a1.a2 kk = 33;
  if (this->has_kk()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kk_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMessage_a1_a2_a3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.InternalMessage.a1.a2.a3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InternalMessage_a1_a2_a3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMessage_a1_a2_a3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.InternalMessage.a1.a2.a3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.InternalMessage.a1.a2.a3)
    MergeFrom(*source);
  }
}

void InternalMessage_a1_a2_a3::MergeFrom(const InternalMessage_a1_a2_a3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.InternalMessage.a1.a2.a3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_kk()) {
    mutable_kk()->::message1::InternalMessage_a1_a2::MergeFrom(from.kk());
  }
}

void InternalMessage_a1_a2_a3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.InternalMessage.a1.a2.a3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMessage_a1_a2_a3::CopyFrom(const InternalMessage_a1_a2_a3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.InternalMessage.a1.a2.a3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMessage_a1_a2_a3::IsInitialized() const {

  return true;
}

void InternalMessage_a1_a2_a3::Swap(InternalMessage_a1_a2_a3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMessage_a1_a2_a3::InternalSwap(InternalMessage_a1_a2_a3* other) {
  std::swap(kk_, other->kk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMessage_a1_a2_a3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InternalMessage_a1_a2_a3_descriptor_;
  metadata.reflection = InternalMessage_a1_a2_a3_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMessage_a1_a2::InternalMessage_a1_a2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.InternalMessage.a1.a2)
}

void InternalMessage_a1_a2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InternalMessage_a1_a2::InternalMessage_a1_a2(const InternalMessage_a1_a2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.InternalMessage.a1.a2)
}

void InternalMessage_a1_a2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

InternalMessage_a1_a2::~InternalMessage_a1_a2() {
  // @@protoc_insertion_point(destructor:message1.InternalMessage.a1.a2)
  SharedDtor();
}

void InternalMessage_a1_a2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InternalMessage_a1_a2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMessage_a1_a2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_a1_a2_descriptor_;
}

const InternalMessage_a1_a2& InternalMessage_a1_a2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

InternalMessage_a1_a2* InternalMessage_a1_a2::default_instance_ = NULL;

InternalMessage_a1_a2* InternalMessage_a1_a2::New(::google::protobuf::Arena* arena) const {
  InternalMessage_a1_a2* n = new InternalMessage_a1_a2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMessage_a1_a2::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.InternalMessage.a1.a2)
}

bool InternalMessage_a1_a2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.InternalMessage.a1.a2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.InternalMessage.a1.a2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.InternalMessage.a1.a2)
  return false;
#undef DO_
}

void InternalMessage_a1_a2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.InternalMessage.a1.a2)
  // @@protoc_insertion_point(serialize_end:message1.InternalMessage.a1.a2)
}

::google::protobuf::uint8* InternalMessage_a1_a2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.InternalMessage.a1.a2)
  // @@protoc_insertion_point(serialize_to_array_end:message1.InternalMessage.a1.a2)
  return target;
}

int InternalMessage_a1_a2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.InternalMessage.a1.a2)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMessage_a1_a2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.InternalMessage.a1.a2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InternalMessage_a1_a2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMessage_a1_a2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.InternalMessage.a1.a2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.InternalMessage.a1.a2)
    MergeFrom(*source);
  }
}

void InternalMessage_a1_a2::MergeFrom(const InternalMessage_a1_a2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.InternalMessage.a1.a2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void InternalMessage_a1_a2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.InternalMessage.a1.a2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMessage_a1_a2::CopyFrom(const InternalMessage_a1_a2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.InternalMessage.a1.a2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMessage_a1_a2::IsInitialized() const {

  return true;
}

void InternalMessage_a1_a2::Swap(InternalMessage_a1_a2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMessage_a1_a2::InternalSwap(InternalMessage_a1_a2* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMessage_a1_a2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InternalMessage_a1_a2_descriptor_;
  metadata.reflection = InternalMessage_a1_a2_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMessage_a1::InternalMessage_a1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.InternalMessage.a1)
}

void InternalMessage_a1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InternalMessage_a1::InternalMessage_a1(const InternalMessage_a1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.InternalMessage.a1)
}

void InternalMessage_a1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

InternalMessage_a1::~InternalMessage_a1() {
  // @@protoc_insertion_point(destructor:message1.InternalMessage.a1)
  SharedDtor();
}

void InternalMessage_a1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InternalMessage_a1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMessage_a1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_a1_descriptor_;
}

const InternalMessage_a1& InternalMessage_a1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

InternalMessage_a1* InternalMessage_a1::default_instance_ = NULL;

InternalMessage_a1* InternalMessage_a1::New(::google::protobuf::Arena* arena) const {
  InternalMessage_a1* n = new InternalMessage_a1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMessage_a1::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.InternalMessage.a1)
}

bool InternalMessage_a1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.InternalMessage.a1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.InternalMessage.a1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.InternalMessage.a1)
  return false;
#undef DO_
}

void InternalMessage_a1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.InternalMessage.a1)
  // @@protoc_insertion_point(serialize_end:message1.InternalMessage.a1)
}

::google::protobuf::uint8* InternalMessage_a1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.InternalMessage.a1)
  // @@protoc_insertion_point(serialize_to_array_end:message1.InternalMessage.a1)
  return target;
}

int InternalMessage_a1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.InternalMessage.a1)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMessage_a1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.InternalMessage.a1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InternalMessage_a1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMessage_a1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.InternalMessage.a1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.InternalMessage.a1)
    MergeFrom(*source);
  }
}

void InternalMessage_a1::MergeFrom(const InternalMessage_a1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.InternalMessage.a1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void InternalMessage_a1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.InternalMessage.a1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMessage_a1::CopyFrom(const InternalMessage_a1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.InternalMessage.a1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMessage_a1::IsInitialized() const {

  return true;
}

void InternalMessage_a1::Swap(InternalMessage_a1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMessage_a1::InternalSwap(InternalMessage_a1* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMessage_a1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InternalMessage_a1_descriptor_;
  metadata.reflection = InternalMessage_a1_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InternalMessage::kTTTTFieldNumber;
const int InternalMessage::kKkFieldNumber;
const int InternalMessage::kCbcbcbcbcbcbcbcFieldNumber;
const int InternalMessage::kSendIdentityFieldNumber;
const int InternalMessage::kRecvIdentityFieldNumber;
const int InternalMessage::kServiceNameFieldNumber;
const int InternalMessage::kMethodNameFieldNumber;
const int InternalMessage::kRequestTypeFieldNumber;
const int InternalMessage::kServerIpFieldNumber;
const int InternalMessage::kServerPortFieldNumber;
const int InternalMessage::kABCDEFGFieldNumber;
const int InternalMessage::kFFFFFFFFFFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMessage::InternalMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.InternalMessage)
}

void InternalMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  tttt_ = const_cast< ::message1::TTTT*>(&::message1::TTTT::default_instance());
  kk_ = const_cast< ::message1::InternalMessage_a1_a2*>(&::message1::InternalMessage_a1_a2::default_instance());
  cbcbcbcbcbcbcbc_ = const_cast< ::message1::AAAA*>(&::message1::AAAA::default_instance());
  abcdefg_ = const_cast< ::message1::TTTT*>(&::message1::TTTT::default_instance());
}

InternalMessage::InternalMessage(const InternalMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.InternalMessage)
}

void InternalMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tttt_ = NULL;
  kk_ = NULL;
  cbcbcbcbcbcbcbc_ = NULL;
  send_identity__ = 0;
  recv_identity__ = 0;
  service_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_type__ = 0;
  server_ip__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abcdefg_ = NULL;
  ffffffffff_ = 0;
}

InternalMessage::~InternalMessage() {
  // @@protoc_insertion_point(destructor:message1.InternalMessage)
  SharedDtor();
}

void InternalMessage::SharedDtor() {
  service_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete tttt_;
    delete kk_;
    delete cbcbcbcbcbcbcbc_;
    delete abcdefg_;
  }
}

void InternalMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_descriptor_;
}

const InternalMessage& InternalMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

InternalMessage* InternalMessage::default_instance_ = NULL;

InternalMessage* InternalMessage::New(::google::protobuf::Arena* arena) const {
  InternalMessage* n = new InternalMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.InternalMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InternalMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InternalMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, recv_identity__);
  if (GetArenaNoVirtual() == NULL && tttt_ != NULL) delete tttt_;
  tttt_ = NULL;
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
  if (GetArenaNoVirtual() == NULL && cbcbcbcbcbcbcbc_ != NULL) delete cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = NULL;
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_type__ = 0;
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && abcdefg_ != NULL) delete abcdefg_;
  abcdefg_ = NULL;
  ffffffffff_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool InternalMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.InternalMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(808026);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .message1.InternalMessage.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::message1::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .message1.InternalMessage.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::message1::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_service_name_;
        break;
      }

      // optional string service_name_ = 3;
      case 3: {
        if (tag == 26) {
         parse_service_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name_().data(), this->service_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message1.InternalMessage.service_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_method_name_;
        break;
      }

      // optional string method_name_ = 4;
      case 4: {
        if (tag == 34) {
         parse_method_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method_name_().data(), this->method_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message1.InternalMessage.method_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_request_type_;
        break;
      }

      // optional .message1.InternalMessage.Request request_type_ = 6;
      case 6: {
        if (tag == 48) {
         parse_request_type_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_type_(static_cast< ::message1::InternalMessage_Request >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_server_ip_;
        break;
      }

      // optional string server_ip_ = 9;
      case 9: {
        if (tag == 74) {
         parse_server_ip_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_ip_().data(), this->server_ip_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message1.InternalMessage.server_ip_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_server_port_;
        break;
      }

      // optional string server_port_ = 10;
      case 10: {
        if (tag == 82) {
         parse_server_port_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_port_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_port_().data(), this->server_port_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message1.InternalMessage.server_port_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_cbcbcbcbcbcbcbc;
        break;
      }

      // optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
      case 1000: {
        if (tag == 8002) {
         parse_cbcbcbcbcbcbcbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cbcbcbcbcbcbcbc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26664)) goto parse_FFFFFFFFFF;
        break;
      }

      // optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
      case 3333: {
        if (tag == 26664) {
         parse_FFFFFFFFFF:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ffffffffff(static_cast< ::message1::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266666)) goto parse_kk;
        break;
      }

      // optional .message1.InternalMessage.a1.a2 kk = 33333;
      case 33333: {
        if (tag == 266666) {
         parse_kk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800002)) goto parse_ABCDEFG;
        break;
      }

      // optional .message1.TTTT ABCDEFG = 100000;
      case 100000: {
        if (tag == 800002) {
         parse_ABCDEFG:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_abcdefg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808026)) goto parse_TTTT;
        break;
      }

      // optional .message1.TTTT TTTT = 101003;
      case 101003: {
        if (tag == 808026) {
         parse_TTTT:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tttt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message1.InternalMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.InternalMessage)
  return false;
#undef DO_
}

void InternalMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.InternalMessage)
  // optional .message1.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .message1.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name_().data(), this->service_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.service_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_name_(), output);
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name_().data(), this->method_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.method_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->method_name_(), output);
  }

  // optional .message1.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->request_type_(), output);
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip_().data(), this->server_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.server_ip_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->server_ip_(), output);
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_port_().data(), this->server_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.server_port_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->server_port_(), output);
  }

  // optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
  if (this->has_cbcbcbcbcbcbcbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, *this->cbcbcbcbcbcbcbc_, output);
  }

  // optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
  if (this->ffffffffff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3333, this->ffffffffff(), output);
  }

  // optional .message1.InternalMessage.a1.a2 kk = 33333;
  if (this->has_kk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33333, *this->kk_, output);
  }

  // optional .message1.TTTT ABCDEFG = 100000;
  if (this->has_abcdefg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100000, *this->abcdefg_, output);
  }

  // optional .message1.TTTT TTTT = 101003;
  if (this->has_tttt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101003, *this->tttt_, output);
  }

  // @@protoc_insertion_point(serialize_end:message1.InternalMessage)
}

::google::protobuf::uint8* InternalMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.InternalMessage)
  // optional .message1.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .message1.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name_().data(), this->service_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.service_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_name_(), target);
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name_().data(), this->method_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.method_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->method_name_(), target);
  }

  // optional .message1.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->request_type_(), target);
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip_().data(), this->server_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.server_ip_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->server_ip_(), target);
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_port_().data(), this->server_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message1.InternalMessage.server_port_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->server_port_(), target);
  }

  // optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
  if (this->has_cbcbcbcbcbcbcbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1000, *this->cbcbcbcbcbcbcbc_, false, target);
  }

  // optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
  if (this->ffffffffff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3333, this->ffffffffff(), target);
  }

  // optional .message1.InternalMessage.a1.a2 kk = 33333;
  if (this->has_kk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33333, *this->kk_, false, target);
  }

  // optional .message1.TTTT ABCDEFG = 100000;
  if (this->has_abcdefg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100000, *this->abcdefg_, false, target);
  }

  // optional .message1.TTTT TTTT = 101003;
  if (this->has_tttt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101003, *this->tttt_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:message1.InternalMessage)
  return target;
}

int InternalMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.InternalMessage)
  int total_size = 0;

  // optional .message1.TTTT TTTT = 101003;
  if (this->has_tttt()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tttt_);
  }

  // optional .message1.InternalMessage.a1.a2 kk = 33333;
  if (this->has_kk()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kk_);
  }

  // optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
  if (this->has_cbcbcbcbcbcbcbc()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cbcbcbcbcbcbcbc_);
  }

  // optional .message1.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .message1.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name_());
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method_name_());
  }

  // optional .message1.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type_());
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_ip_());
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_port_());
  }

  // optional .message1.TTTT ABCDEFG = 100000;
  if (this->has_abcdefg()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->abcdefg_);
  }

  // optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
  if (this->ffffffffff() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ffffffffff());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.InternalMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InternalMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.InternalMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.InternalMessage)
    MergeFrom(*source);
  }
}

void InternalMessage::MergeFrom(const InternalMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.InternalMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_tttt()) {
    mutable_tttt()->::message1::TTTT::MergeFrom(from.tttt());
  }
  if (from.has_kk()) {
    mutable_kk()->::message1::InternalMessage_a1_a2::MergeFrom(from.kk());
  }
  if (from.has_cbcbcbcbcbcbcbc()) {
    mutable_cbcbcbcbcbcbcbc()->::message1::AAAA::MergeFrom(from.cbcbcbcbcbcbcbc());
  }
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.service_name_().size() > 0) {

    service_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name__);
  }
  if (from.method_name_().size() > 0) {

    method_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name__);
  }
  if (from.request_type_() != 0) {
    set_request_type_(from.request_type_());
  }
  if (from.server_ip_().size() > 0) {

    server_ip__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip__);
  }
  if (from.server_port_().size() > 0) {

    server_port__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_port__);
  }
  if (from.has_abcdefg()) {
    mutable_abcdefg()->::message1::TTTT::MergeFrom(from.abcdefg());
  }
  if (from.ffffffffff() != 0) {
    set_ffffffffff(from.ffffffffff());
  }
}

void InternalMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.InternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMessage::CopyFrom(const InternalMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.InternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMessage::IsInitialized() const {

  return true;
}

void InternalMessage::Swap(InternalMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMessage::InternalSwap(InternalMessage* other) {
  std::swap(tttt_, other->tttt_);
  std::swap(kk_, other->kk_);
  std::swap(cbcbcbcbcbcbcbc_, other->cbcbcbcbcbcbcbc_);
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  service_name__.Swap(&other->service_name__);
  method_name__.Swap(&other->method_name__);
  std::swap(request_type__, other->request_type__);
  server_ip__.Swap(&other->server_ip__);
  server_port__.Swap(&other->server_port__);
  std::swap(abcdefg_, other->abcdefg_);
  std::swap(ffffffffff_, other->ffffffffff_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InternalMessage_descriptor_;
  metadata.reflection = InternalMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InternalMessage_a1_a2_a3

// optional .message1.InternalMessage.a1.a2 kk = 33;
bool InternalMessage_a1_a2_a3::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
void InternalMessage_a1_a2_a3::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
const ::message1::InternalMessage_a1_a2& InternalMessage_a1_a2_a3::kk() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.a1.a2.a3.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
::message1::InternalMessage_a1_a2* InternalMessage_a1_a2_a3::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::InternalMessage_a1_a2;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.a1.a2.a3.kk)
  return kk_;
}
::message1::InternalMessage_a1_a2* InternalMessage_a1_a2_a3::release_kk() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.a1.a2.a3.kk)
  
  ::message1::InternalMessage_a1_a2* temp = kk_;
  kk_ = NULL;
  return temp;
}
void InternalMessage_a1_a2_a3::set_allocated_kk(::message1::InternalMessage_a1_a2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.a1.a2.a3.kk)
}

// -------------------------------------------------------------------

// InternalMessage_a1_a2

// -------------------------------------------------------------------

// InternalMessage_a1

// -------------------------------------------------------------------

// InternalMessage

// optional .message1.TTTT TTTT = 101003;
bool InternalMessage::has_tttt() const {
  return !_is_default_instance_ && tttt_ != NULL;
}
void InternalMessage::clear_tttt() {
  if (GetArenaNoVirtual() == NULL && tttt_ != NULL) delete tttt_;
  tttt_ = NULL;
}
const ::message1::TTTT& InternalMessage::tttt() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.TTTT)
  return tttt_ != NULL ? *tttt_ : *default_instance_->tttt_;
}
::message1::TTTT* InternalMessage::mutable_tttt() {
  
  if (tttt_ == NULL) {
    tttt_ = new ::message1::TTTT;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.TTTT)
  return tttt_;
}
::message1::TTTT* InternalMessage::release_tttt() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.TTTT)
  
  ::message1::TTTT* temp = tttt_;
  tttt_ = NULL;
  return temp;
}
void InternalMessage::set_allocated_tttt(::message1::TTTT* tttt) {
  delete tttt_;
  tttt_ = tttt;
  if (tttt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.TTTT)
}

// optional .message1.InternalMessage.a1.a2 kk = 33333;
bool InternalMessage::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
void InternalMessage::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
const ::message1::InternalMessage_a1_a2& InternalMessage::kk() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
::message1::InternalMessage_a1_a2* InternalMessage::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::InternalMessage_a1_a2;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.kk)
  return kk_;
}
::message1::InternalMessage_a1_a2* InternalMessage::release_kk() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.kk)
  
  ::message1::InternalMessage_a1_a2* temp = kk_;
  kk_ = NULL;
  return temp;
}
void InternalMessage::set_allocated_kk(::message1::InternalMessage_a1_a2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.kk)
}

// optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
bool InternalMessage::has_cbcbcbcbcbcbcbc() const {
  return !_is_default_instance_ && cbcbcbcbcbcbcbc_ != NULL;
}
void InternalMessage::clear_cbcbcbcbcbcbcbc() {
  if (GetArenaNoVirtual() == NULL && cbcbcbcbcbcbcbc_ != NULL) delete cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = NULL;
}
const ::message1::AAAA& InternalMessage::cbcbcbcbcbcbcbc() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.cbcbcbcbcbcbcbc)
  return cbcbcbcbcbcbcbc_ != NULL ? *cbcbcbcbcbcbcbc_ : *default_instance_->cbcbcbcbcbcbcbc_;
}
::message1::AAAA* InternalMessage::mutable_cbcbcbcbcbcbcbc() {
  
  if (cbcbcbcbcbcbcbc_ == NULL) {
    cbcbcbcbcbcbcbc_ = new ::message1::AAAA;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.cbcbcbcbcbcbcbc)
  return cbcbcbcbcbcbcbc_;
}
::message1::AAAA* InternalMessage::release_cbcbcbcbcbcbcbc() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.cbcbcbcbcbcbcbc)
  
  ::message1::AAAA* temp = cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = NULL;
  return temp;
}
void InternalMessage::set_allocated_cbcbcbcbcbcbcbc(::message1::AAAA* cbcbcbcbcbcbcbc) {
  delete cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = cbcbcbcbcbcbcbc;
  if (cbcbcbcbcbcbcbc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.cbcbcbcbcbcbcbc)
}

// optional .message1.InternalMessage.Identity send_identity_ = 1;
void InternalMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::message1::InternalMessage_Identity InternalMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.send_identity_)
  return static_cast< ::message1::InternalMessage_Identity >(send_identity__);
}
 void InternalMessage::set_send_identity_(::message1::InternalMessage_Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.send_identity_)
}

// optional .message1.InternalMessage.Identity recv_identity_ = 2;
void InternalMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::message1::InternalMessage_Identity InternalMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.recv_identity_)
  return static_cast< ::message1::InternalMessage_Identity >(recv_identity__);
}
 void InternalMessage::set_recv_identity_(::message1::InternalMessage_Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.recv_identity_)
}

// optional string service_name_ = 3;
void InternalMessage::clear_service_name_() {
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::service_name_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.service_name_)
  return service_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_service_name_(const ::std::string& value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.service_name_)
}
 void InternalMessage::set_service_name_(const char* value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.service_name_)
}
 void InternalMessage::set_service_name_(const char* value, size_t size) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.service_name_)
}
 ::std::string* InternalMessage::mutable_service_name_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.service_name_)
  return service_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_service_name_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.service_name_)
  
  return service_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_service_name_(::std::string* service_name_) {
  if (service_name_ != NULL) {
    
  } else {
    
  }
  service_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.service_name_)
}

// optional string method_name_ = 4;
void InternalMessage::clear_method_name_() {
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::method_name_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.method_name_)
  return method_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_method_name_(const ::std::string& value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.method_name_)
}
 void InternalMessage::set_method_name_(const char* value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.method_name_)
}
 void InternalMessage::set_method_name_(const char* value, size_t size) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.method_name_)
}
 ::std::string* InternalMessage::mutable_method_name_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.method_name_)
  return method_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_method_name_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.method_name_)
  
  return method_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_method_name_(::std::string* method_name_) {
  if (method_name_ != NULL) {
    
  } else {
    
  }
  method_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.method_name_)
}

// optional .message1.InternalMessage.Request request_type_ = 6;
void InternalMessage::clear_request_type_() {
  request_type__ = 0;
}
 ::message1::InternalMessage_Request InternalMessage::request_type_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.request_type_)
  return static_cast< ::message1::InternalMessage_Request >(request_type__);
}
 void InternalMessage::set_request_type_(::message1::InternalMessage_Request value) {
  
  request_type__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.request_type_)
}

// optional string server_ip_ = 9;
void InternalMessage::clear_server_ip_() {
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::server_ip_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.server_ip_)
  return server_ip__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_server_ip_(const ::std::string& value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.server_ip_)
}
 void InternalMessage::set_server_ip_(const char* value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.server_ip_)
}
 void InternalMessage::set_server_ip_(const char* value, size_t size) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.server_ip_)
}
 ::std::string* InternalMessage::mutable_server_ip_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.server_ip_)
  return server_ip__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_server_ip_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.server_ip_)
  
  return server_ip__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_server_ip_(::std::string* server_ip_) {
  if (server_ip_ != NULL) {
    
  } else {
    
  }
  server_ip__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.server_ip_)
}

// optional string server_port_ = 10;
void InternalMessage::clear_server_port_() {
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::server_port_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.server_port_)
  return server_port__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_server_port_(const ::std::string& value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.server_port_)
}
 void InternalMessage::set_server_port_(const char* value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.server_port_)
}
 void InternalMessage::set_server_port_(const char* value, size_t size) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.server_port_)
}
 ::std::string* InternalMessage::mutable_server_port_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.server_port_)
  return server_port__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_server_port_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.server_port_)
  
  return server_port__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_server_port_(::std::string* server_port_) {
  if (server_port_ != NULL) {
    
  } else {
    
  }
  server_port__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_port_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.server_port_)
}

// optional .message1.TTTT ABCDEFG = 100000;
bool InternalMessage::has_abcdefg() const {
  return !_is_default_instance_ && abcdefg_ != NULL;
}
void InternalMessage::clear_abcdefg() {
  if (GetArenaNoVirtual() == NULL && abcdefg_ != NULL) delete abcdefg_;
  abcdefg_ = NULL;
}
const ::message1::TTTT& InternalMessage::abcdefg() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.ABCDEFG)
  return abcdefg_ != NULL ? *abcdefg_ : *default_instance_->abcdefg_;
}
::message1::TTTT* InternalMessage::mutable_abcdefg() {
  
  if (abcdefg_ == NULL) {
    abcdefg_ = new ::message1::TTTT;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.ABCDEFG)
  return abcdefg_;
}
::message1::TTTT* InternalMessage::release_abcdefg() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.ABCDEFG)
  
  ::message1::TTTT* temp = abcdefg_;
  abcdefg_ = NULL;
  return temp;
}
void InternalMessage::set_allocated_abcdefg(::message1::TTTT* abcdefg) {
  delete abcdefg_;
  abcdefg_ = abcdefg;
  if (abcdefg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.ABCDEFG)
}

// optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
void InternalMessage::clear_ffffffffff() {
  ffffffffff_ = 0;
}
 ::message1::InternalMessage_Identity InternalMessage::ffffffffff() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.FFFFFFFFFF)
  return static_cast< ::message1::InternalMessage_Identity >(ffffffffff_);
}
 void InternalMessage::set_ffffffffff(::message1::InternalMessage_Identity value) {
  
  ffffffffff_ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.FFFFFFFFFF)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c1::c1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.c1)
}

void c1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

c1::c1(const c1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.c1)
}

void c1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

c1::~c1() {
  // @@protoc_insertion_point(destructor:message1.c1)
  SharedDtor();
}

void c1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void c1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c1_descriptor_;
}

const c1& c1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

c1* c1::default_instance_ = NULL;

c1* c1::New(::google::protobuf::Arena* arena) const {
  c1* n = new c1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void c1::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.c1)
}

bool c1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.c1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.c1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.c1)
  return false;
#undef DO_
}

void c1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.c1)
  // @@protoc_insertion_point(serialize_end:message1.c1)
}

::google::protobuf::uint8* c1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.c1)
  // @@protoc_insertion_point(serialize_to_array_end:message1.c1)
  return target;
}

int c1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.c1)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.c1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const c1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const c1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.c1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.c1)
    MergeFrom(*source);
  }
}

void c1::MergeFrom(const c1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.c1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void c1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.c1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c1::CopyFrom(const c1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.c1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c1::IsInitialized() const {

  return true;
}

void c1::Swap(c1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c1::InternalSwap(c1* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = c1_descriptor_;
  metadata.reflection = c1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// c1

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AAAA::AAAA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.AAAA)
}

void AAAA::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AAAA::AAAA(const AAAA& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.AAAA)
}

void AAAA::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AAAA::~AAAA() {
  // @@protoc_insertion_point(destructor:message1.AAAA)
  SharedDtor();
}

void AAAA::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AAAA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AAAA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AAAA_descriptor_;
}

const AAAA& AAAA::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

AAAA* AAAA::default_instance_ = NULL;

AAAA* AAAA::New(::google::protobuf::Arena* arena) const {
  AAAA* n = new AAAA;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AAAA::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.AAAA)
}

bool AAAA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.AAAA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.AAAA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.AAAA)
  return false;
#undef DO_
}

void AAAA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.AAAA)
  // @@protoc_insertion_point(serialize_end:message1.AAAA)
}

::google::protobuf::uint8* AAAA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.AAAA)
  // @@protoc_insertion_point(serialize_to_array_end:message1.AAAA)
  return target;
}

int AAAA::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.AAAA)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AAAA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.AAAA)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AAAA* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AAAA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.AAAA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.AAAA)
    MergeFrom(*source);
  }
}

void AAAA::MergeFrom(const AAAA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.AAAA)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void AAAA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.AAAA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AAAA::CopyFrom(const AAAA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.AAAA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AAAA::IsInitialized() const {

  return true;
}

void AAAA::Swap(AAAA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AAAA::InternalSwap(AAAA* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AAAA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AAAA_descriptor_;
  metadata.reflection = AAAA_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AAAA

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Imagine_Rpc::Imagine_Rpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.Imagine_Rpc)
}

void Imagine_Rpc::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Imagine_Rpc::Imagine_Rpc(const Imagine_Rpc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.Imagine_Rpc)
}

void Imagine_Rpc::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Imagine_Rpc::~Imagine_Rpc() {
  // @@protoc_insertion_point(destructor:message1.Imagine_Rpc)
  SharedDtor();
}

void Imagine_Rpc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Imagine_Rpc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Imagine_Rpc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Imagine_Rpc_descriptor_;
}

const Imagine_Rpc& Imagine_Rpc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Imagine_Rpc* Imagine_Rpc::default_instance_ = NULL;

Imagine_Rpc* Imagine_Rpc::New(::google::protobuf::Arena* arena) const {
  Imagine_Rpc* n = new Imagine_Rpc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Imagine_Rpc::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.Imagine_Rpc)
}

bool Imagine_Rpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.Imagine_Rpc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:message1.Imagine_Rpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.Imagine_Rpc)
  return false;
#undef DO_
}

void Imagine_Rpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.Imagine_Rpc)
  // @@protoc_insertion_point(serialize_end:message1.Imagine_Rpc)
}

::google::protobuf::uint8* Imagine_Rpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.Imagine_Rpc)
  // @@protoc_insertion_point(serialize_to_array_end:message1.Imagine_Rpc)
  return target;
}

int Imagine_Rpc::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.Imagine_Rpc)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Imagine_Rpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.Imagine_Rpc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Imagine_Rpc* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Imagine_Rpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.Imagine_Rpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.Imagine_Rpc)
    MergeFrom(*source);
  }
}

void Imagine_Rpc::MergeFrom(const Imagine_Rpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.Imagine_Rpc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Imagine_Rpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.Imagine_Rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Imagine_Rpc::CopyFrom(const Imagine_Rpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.Imagine_Rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Imagine_Rpc::IsInitialized() const {

  return true;
}

void Imagine_Rpc::Swap(Imagine_Rpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Imagine_Rpc::InternalSwap(Imagine_Rpc* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Imagine_Rpc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Imagine_Rpc_descriptor_;
  metadata.reflection = Imagine_Rpc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Imagine_Rpc

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TTTT::kTaaaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TTTT::TTTT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message1.TTTT)
}

void TTTT::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TTTT::TTTT(const TTTT& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message1.TTTT)
}

void TTTT::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  taaa_ = 0;
}

TTTT::~TTTT() {
  // @@protoc_insertion_point(destructor:message1.TTTT)
  SharedDtor();
}

void TTTT::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTTT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTTT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTTT_descriptor_;
}

const TTTT& TTTT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

TTTT* TTTT::default_instance_ = NULL;

TTTT* TTTT::New(::google::protobuf::Arena* arena) const {
  TTTT* n = new TTTT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TTTT::Clear() {
// @@protoc_insertion_point(message_clear_start:message1.TTTT)
  taaa_ = 0;
}

bool TTTT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message1.TTTT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .message1.InternalMessage.Identity taaa = 2;
      case 2: {
        if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_taaa(static_cast< ::message1::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message1.TTTT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message1.TTTT)
  return false;
#undef DO_
}

void TTTT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message1.TTTT)
  // optional .message1.InternalMessage.Identity taaa = 2;
  if (this->taaa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->taaa(), output);
  }

  // @@protoc_insertion_point(serialize_end:message1.TTTT)
}

::google::protobuf::uint8* TTTT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message1.TTTT)
  // optional .message1.InternalMessage.Identity taaa = 2;
  if (this->taaa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->taaa(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:message1.TTTT)
  return target;
}

int TTTT::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:message1.TTTT)
  int total_size = 0;

  // optional .message1.InternalMessage.Identity taaa = 2;
  if (this->taaa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->taaa());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTTT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message1.TTTT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TTTT* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TTTT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message1.TTTT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message1.TTTT)
    MergeFrom(*source);
  }
}

void TTTT::MergeFrom(const TTTT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message1.TTTT)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.taaa() != 0) {
    set_taaa(from.taaa());
  }
}

void TTTT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message1.TTTT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTTT::CopyFrom(const TTTT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message1.TTTT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTTT::IsInitialized() const {

  return true;
}

void TTTT::Swap(TTTT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TTTT::InternalSwap(TTTT* other) {
  std::swap(taaa_, other->taaa_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TTTT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTTT_descriptor_;
  metadata.reflection = TTTT_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TTTT

// optional .message1.InternalMessage.Identity taaa = 2;
void TTTT::clear_taaa() {
  taaa_ = 0;
}
 ::message1::InternalMessage_Identity TTTT::taaa() const {
  // @@protoc_insertion_point(field_get:message1.TTTT.taaa)
  return static_cast< ::message1::InternalMessage_Identity >(taaa_);
}
 void TTTT::set_taaa(::message1::InternalMessage_Identity value) {
  
  taaa_ = value;
  // @@protoc_insertion_point(field_set:message1.TTTT.taaa)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message1

// @@protoc_insertion_point(global_scope)
