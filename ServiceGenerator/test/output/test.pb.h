// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "test_import2.a.pb.h"
#include "test_import.a.pb.h"
#include "test_import.pb.h"
#include "test_import2.pb.h"
// @@protoc_insertion_point(includes)

namespace message1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class AAAA;
class Imagine_Rpc;
class InternalMessage;
class InternalMessage_a1;
class InternalMessage_a1_a2;
class InternalMessage_a1_a2_a3;
class TTTT;
class c;
class c1;
class c_c1;
class c_c1_c2;
class c_c1_c2_c3;
class c_c1_c2_c3_c3;

enum InternalMessage_Request {
  InternalMessage_Request_Register = 0,
  InternalMessage_Request_DeRegister = 1,
  InternalMessage_Request_Heartbeat = 2,
  InternalMessage_Request_Search = 3,
  InternalMessage_Request_Response = 4,
  InternalMessage_Request_InternalMessage_Request_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InternalMessage_Request_InternalMessage_Request_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InternalMessage_Request_IsValid(int value);
const InternalMessage_Request InternalMessage_Request_Request_MIN = InternalMessage_Request_Register;
const InternalMessage_Request InternalMessage_Request_Request_MAX = InternalMessage_Request_Response;
const int InternalMessage_Request_Request_ARRAYSIZE = InternalMessage_Request_Request_MAX + 1;

const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor();
inline const ::std::string& InternalMessage_Request_Name(InternalMessage_Request value) {
  return ::google::protobuf::internal::NameOfEnum(
    InternalMessage_Request_descriptor(), value);
}
inline bool InternalMessage_Request_Parse(
    const ::std::string& name, InternalMessage_Request* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InternalMessage_Request>(
    InternalMessage_Request_descriptor(), name, value);
}
enum InternalMessage_Identity {
  InternalMessage_Identity_Client = 0,
  InternalMessage_Identity_Server = 1,
  InternalMessage_Identity_ZooKeeper = 2,
  InternalMessage_Identity_InternalMessage_Identity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InternalMessage_Identity_InternalMessage_Identity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InternalMessage_Identity_IsValid(int value);
const InternalMessage_Identity InternalMessage_Identity_Identity_MIN = InternalMessage_Identity_Client;
const InternalMessage_Identity InternalMessage_Identity_Identity_MAX = InternalMessage_Identity_ZooKeeper;
const int InternalMessage_Identity_Identity_ARRAYSIZE = InternalMessage_Identity_Identity_MAX + 1;

const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor();
inline const ::std::string& InternalMessage_Identity_Name(InternalMessage_Identity value) {
  return ::google::protobuf::internal::NameOfEnum(
    InternalMessage_Identity_descriptor(), value);
}
inline bool InternalMessage_Identity_Parse(
    const ::std::string& name, InternalMessage_Identity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InternalMessage_Identity>(
    InternalMessage_Identity_descriptor(), name, value);
}
enum aslkfj {
  aaa = 0,
  aslkfj_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  aslkfj_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool aslkfj_IsValid(int value);
const aslkfj aslkfj_MIN = aaa;
const aslkfj aslkfj_MAX = aaa;
const int aslkfj_ARRAYSIZE = aslkfj_MAX + 1;

const ::google::protobuf::EnumDescriptor* aslkfj_descriptor();
inline const ::std::string& aslkfj_Name(aslkfj value) {
  return ::google::protobuf::internal::NameOfEnum(
    aslkfj_descriptor(), value);
}
inline bool aslkfj_Parse(
    const ::std::string& name, aslkfj* value) {
  return ::google::protobuf::internal::ParseNamedEnum<aslkfj>(
    aslkfj_descriptor(), name, value);
}
// ===================================================================

class c_c1_c2_c3_c3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c.c1.c2.c3.c3) */ {
 public:
  c_c1_c2_c3_c3();
  virtual ~c_c1_c2_c3_c3();

  c_c1_c2_c3_c3(const c_c1_c2_c3_c3& from);

  inline c_c1_c2_c3_c3& operator=(const c_c1_c2_c3_c3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_c1_c2_c3_c3& default_instance();

  void Swap(c_c1_c2_c3_c3* other);

  // implements Message ----------------------------------------------

  inline c_c1_c2_c3_c3* New() const { return New(NULL); }

  c_c1_c2_c3_c3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c_c1_c2_c3_c3& from);
  void MergeFrom(const c_c1_c2_c3_c3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c_c1_c2_c3_c3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.c.c1.c2.c3.c3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c_c1_c2_c3_c3* default_instance_;
};
// -------------------------------------------------------------------

class c_c1_c2_c3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c.c1.c2.c3) */ {
 public:
  c_c1_c2_c3();
  virtual ~c_c1_c2_c3();

  c_c1_c2_c3(const c_c1_c2_c3& from);

  inline c_c1_c2_c3& operator=(const c_c1_c2_c3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_c1_c2_c3& default_instance();

  void Swap(c_c1_c2_c3* other);

  // implements Message ----------------------------------------------

  inline c_c1_c2_c3* New() const { return New(NULL); }

  c_c1_c2_c3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c_c1_c2_c3& from);
  void MergeFrom(const c_c1_c2_c3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c_c1_c2_c3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef c_c1_c2_c3_c3 c3;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.c.c1.c2.c3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c_c1_c2_c3* default_instance_;
};
// -------------------------------------------------------------------

class c_c1_c2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c.c1.c2) */ {
 public:
  c_c1_c2();
  virtual ~c_c1_c2();

  c_c1_c2(const c_c1_c2& from);

  inline c_c1_c2& operator=(const c_c1_c2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_c1_c2& default_instance();

  void Swap(c_c1_c2* other);

  // implements Message ----------------------------------------------

  inline c_c1_c2* New() const { return New(NULL); }

  c_c1_c2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c_c1_c2& from);
  void MergeFrom(const c_c1_c2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c_c1_c2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef c_c1_c2_c3 c3;

  // accessors -------------------------------------------------------

  // optional .message1.c.c1.c2 kk = 1;
  bool has_kk() const;
  void clear_kk();
  static const int kKkFieldNumber = 1;
  const ::message1::c_c1_c2& kk() const;
  ::message1::c_c1_c2* mutable_kk();
  ::message1::c_c1_c2* release_kk();
  void set_allocated_kk(::message1::c_c1_c2* kk);

  // @@protoc_insertion_point(class_scope:message1.c.c1.c2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message1::c_c1_c2* kk_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c_c1_c2* default_instance_;
};
// -------------------------------------------------------------------

class c_c1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c.c1) */ {
 public:
  c_c1();
  virtual ~c_c1();

  c_c1(const c_c1& from);

  inline c_c1& operator=(const c_c1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_c1& default_instance();

  void Swap(c_c1* other);

  // implements Message ----------------------------------------------

  inline c_c1* New() const { return New(NULL); }

  c_c1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c_c1& from);
  void MergeFrom(const c_c1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c_c1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef c_c1_c2 c2;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.c.c1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c_c1* default_instance_;
};
// -------------------------------------------------------------------

class c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c) */ {
 public:
  c();
  virtual ~c();

  c(const c& from);

  inline c& operator=(const c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c& default_instance();

  void Swap(c* other);

  // implements Message ----------------------------------------------

  inline c* New() const { return New(NULL); }

  c* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c& from);
  void MergeFrom(const c& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef c_c1 c1;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c* default_instance_;
};
// -------------------------------------------------------------------

class InternalMessage_a1_a2_a3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.InternalMessage.a1.a2.a3) */ {
 public:
  InternalMessage_a1_a2_a3();
  virtual ~InternalMessage_a1_a2_a3();

  InternalMessage_a1_a2_a3(const InternalMessage_a1_a2_a3& from);

  inline InternalMessage_a1_a2_a3& operator=(const InternalMessage_a1_a2_a3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalMessage_a1_a2_a3& default_instance();

  void Swap(InternalMessage_a1_a2_a3* other);

  // implements Message ----------------------------------------------

  inline InternalMessage_a1_a2_a3* New() const { return New(NULL); }

  InternalMessage_a1_a2_a3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InternalMessage_a1_a2_a3& from);
  void MergeFrom(const InternalMessage_a1_a2_a3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalMessage_a1_a2_a3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message1.InternalMessage.a1.a2 kk = 33;
  bool has_kk() const;
  void clear_kk();
  static const int kKkFieldNumber = 33;
  const ::message1::InternalMessage_a1_a2& kk() const;
  ::message1::InternalMessage_a1_a2* mutable_kk();
  ::message1::InternalMessage_a1_a2* release_kk();
  void set_allocated_kk(::message1::InternalMessage_a1_a2* kk);

  // @@protoc_insertion_point(class_scope:message1.InternalMessage.a1.a2.a3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message1::InternalMessage_a1_a2* kk_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static InternalMessage_a1_a2_a3* default_instance_;
};
// -------------------------------------------------------------------

class InternalMessage_a1_a2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.InternalMessage.a1.a2) */ {
 public:
  InternalMessage_a1_a2();
  virtual ~InternalMessage_a1_a2();

  InternalMessage_a1_a2(const InternalMessage_a1_a2& from);

  inline InternalMessage_a1_a2& operator=(const InternalMessage_a1_a2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalMessage_a1_a2& default_instance();

  void Swap(InternalMessage_a1_a2* other);

  // implements Message ----------------------------------------------

  inline InternalMessage_a1_a2* New() const { return New(NULL); }

  InternalMessage_a1_a2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InternalMessage_a1_a2& from);
  void MergeFrom(const InternalMessage_a1_a2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalMessage_a1_a2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InternalMessage_a1_a2_a3 a3;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.InternalMessage.a1.a2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static InternalMessage_a1_a2* default_instance_;
};
// -------------------------------------------------------------------

class InternalMessage_a1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.InternalMessage.a1) */ {
 public:
  InternalMessage_a1();
  virtual ~InternalMessage_a1();

  InternalMessage_a1(const InternalMessage_a1& from);

  inline InternalMessage_a1& operator=(const InternalMessage_a1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalMessage_a1& default_instance();

  void Swap(InternalMessage_a1* other);

  // implements Message ----------------------------------------------

  inline InternalMessage_a1* New() const { return New(NULL); }

  InternalMessage_a1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InternalMessage_a1& from);
  void MergeFrom(const InternalMessage_a1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalMessage_a1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InternalMessage_a1_a2 a2;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.InternalMessage.a1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static InternalMessage_a1* default_instance_;
};
// -------------------------------------------------------------------

class InternalMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.InternalMessage) */ {
 public:
  InternalMessage();
  virtual ~InternalMessage();

  InternalMessage(const InternalMessage& from);

  inline InternalMessage& operator=(const InternalMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalMessage& default_instance();

  void Swap(InternalMessage* other);

  // implements Message ----------------------------------------------

  inline InternalMessage* New() const { return New(NULL); }

  InternalMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InternalMessage& from);
  void MergeFrom(const InternalMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InternalMessage_a1 a1;

  typedef InternalMessage_Request Request;
  static const Request Register =
    InternalMessage_Request_Register;
  static const Request DeRegister =
    InternalMessage_Request_DeRegister;
  static const Request Heartbeat =
    InternalMessage_Request_Heartbeat;
  static const Request Search =
    InternalMessage_Request_Search;
  static const Request Response =
    InternalMessage_Request_Response;
  static inline bool Request_IsValid(int value) {
    return InternalMessage_Request_IsValid(value);
  }
  static const Request Request_MIN =
    InternalMessage_Request_Request_MIN;
  static const Request Request_MAX =
    InternalMessage_Request_Request_MAX;
  static const int Request_ARRAYSIZE =
    InternalMessage_Request_Request_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Request_descriptor() {
    return InternalMessage_Request_descriptor();
  }
  static inline const ::std::string& Request_Name(Request value) {
    return InternalMessage_Request_Name(value);
  }
  static inline bool Request_Parse(const ::std::string& name,
      Request* value) {
    return InternalMessage_Request_Parse(name, value);
  }

  typedef InternalMessage_Identity Identity;
  static const Identity Client =
    InternalMessage_Identity_Client;
  static const Identity Server =
    InternalMessage_Identity_Server;
  static const Identity ZooKeeper =
    InternalMessage_Identity_ZooKeeper;
  static inline bool Identity_IsValid(int value) {
    return InternalMessage_Identity_IsValid(value);
  }
  static const Identity Identity_MIN =
    InternalMessage_Identity_Identity_MIN;
  static const Identity Identity_MAX =
    InternalMessage_Identity_Identity_MAX;
  static const int Identity_ARRAYSIZE =
    InternalMessage_Identity_Identity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Identity_descriptor() {
    return InternalMessage_Identity_descriptor();
  }
  static inline const ::std::string& Identity_Name(Identity value) {
    return InternalMessage_Identity_Name(value);
  }
  static inline bool Identity_Parse(const ::std::string& name,
      Identity* value) {
    return InternalMessage_Identity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .message1.TTTT TTTT = 101003;
  bool has_tttt() const;
  void clear_tttt();
  static const int kTTTTFieldNumber = 101003;
  const ::message1::TTTT& tttt() const;
  ::message1::TTTT* mutable_tttt();
  ::message1::TTTT* release_tttt();
  void set_allocated_tttt(::message1::TTTT* tttt);

  // optional .message1.InternalMessage.a1.a2 kk = 33333;
  bool has_kk() const;
  void clear_kk();
  static const int kKkFieldNumber = 33333;
  const ::message1::InternalMessage_a1_a2& kk() const;
  ::message1::InternalMessage_a1_a2* mutable_kk();
  ::message1::InternalMessage_a1_a2* release_kk();
  void set_allocated_kk(::message1::InternalMessage_a1_a2* kk);

  // optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
  bool has_cbcbcbcbcbcbcbc() const;
  void clear_cbcbcbcbcbcbcbc();
  static const int kCbcbcbcbcbcbcbcFieldNumber = 1000;
  const ::message1::AAAA& cbcbcbcbcbcbcbc() const;
  ::message1::AAAA* mutable_cbcbcbcbcbcbcbc();
  ::message1::AAAA* release_cbcbcbcbcbcbcbc();
  void set_allocated_cbcbcbcbcbcbcbc(::message1::AAAA* cbcbcbcbcbcbcbc);

  // optional .message1.InternalMessage.Identity send_identity_ = 1;
  void clear_send_identity_();
  static const int kSendIdentityFieldNumber = 1;
  ::message1::InternalMessage_Identity send_identity_() const;
  void set_send_identity_(::message1::InternalMessage_Identity value);

  // optional .message1.InternalMessage.Identity recv_identity_ = 2;
  void clear_recv_identity_();
  static const int kRecvIdentityFieldNumber = 2;
  ::message1::InternalMessage_Identity recv_identity_() const;
  void set_recv_identity_(::message1::InternalMessage_Identity value);

  // optional string service_name_ = 3;
  void clear_service_name_();
  static const int kServiceNameFieldNumber = 3;
  const ::std::string& service_name_() const;
  void set_service_name_(const ::std::string& value);
  void set_service_name_(const char* value);
  void set_service_name_(const char* value, size_t size);
  ::std::string* mutable_service_name_();
  ::std::string* release_service_name_();
  void set_allocated_service_name_(::std::string* service_name_);

  // optional string method_name_ = 4;
  void clear_method_name_();
  static const int kMethodNameFieldNumber = 4;
  const ::std::string& method_name_() const;
  void set_method_name_(const ::std::string& value);
  void set_method_name_(const char* value);
  void set_method_name_(const char* value, size_t size);
  ::std::string* mutable_method_name_();
  ::std::string* release_method_name_();
  void set_allocated_method_name_(::std::string* method_name_);

  // optional .message1.InternalMessage.Request request_type_ = 6;
  void clear_request_type_();
  static const int kRequestTypeFieldNumber = 6;
  ::message1::InternalMessage_Request request_type_() const;
  void set_request_type_(::message1::InternalMessage_Request value);

  // optional string server_ip_ = 9;
  void clear_server_ip_();
  static const int kServerIpFieldNumber = 9;
  const ::std::string& server_ip_() const;
  void set_server_ip_(const ::std::string& value);
  void set_server_ip_(const char* value);
  void set_server_ip_(const char* value, size_t size);
  ::std::string* mutable_server_ip_();
  ::std::string* release_server_ip_();
  void set_allocated_server_ip_(::std::string* server_ip_);

  // optional string server_port_ = 10;
  void clear_server_port_();
  static const int kServerPortFieldNumber = 10;
  const ::std::string& server_port_() const;
  void set_server_port_(const ::std::string& value);
  void set_server_port_(const char* value);
  void set_server_port_(const char* value, size_t size);
  ::std::string* mutable_server_port_();
  ::std::string* release_server_port_();
  void set_allocated_server_port_(::std::string* server_port_);

  // optional .message1.TTTT ABCDEFG = 100000;
  bool has_abcdefg() const;
  void clear_abcdefg();
  static const int kABCDEFGFieldNumber = 100000;
  const ::message1::TTTT& abcdefg() const;
  ::message1::TTTT* mutable_abcdefg();
  ::message1::TTTT* release_abcdefg();
  void set_allocated_abcdefg(::message1::TTTT* abcdefg);

  // optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
  void clear_ffffffffff();
  static const int kFFFFFFFFFFFieldNumber = 3333;
  ::message1::InternalMessage_Identity ffffffffff() const;
  void set_ffffffffff(::message1::InternalMessage_Identity value);

  // @@protoc_insertion_point(class_scope:message1.InternalMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message1::TTTT* tttt_;
  ::message1::InternalMessage_a1_a2* kk_;
  ::message1::AAAA* cbcbcbcbcbcbcbc_;
  int send_identity__;
  int recv_identity__;
  ::google::protobuf::internal::ArenaStringPtr service_name__;
  ::google::protobuf::internal::ArenaStringPtr method_name__;
  ::google::protobuf::internal::ArenaStringPtr server_ip__;
  ::google::protobuf::internal::ArenaStringPtr server_port__;
  int request_type__;
  int ffffffffff_;
  ::message1::TTTT* abcdefg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static InternalMessage* default_instance_;
};
// -------------------------------------------------------------------

class c1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.c1) */ {
 public:
  c1();
  virtual ~c1();

  c1(const c1& from);

  inline c1& operator=(const c1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c1& default_instance();

  void Swap(c1* other);

  // implements Message ----------------------------------------------

  inline c1* New() const { return New(NULL); }

  c1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const c1& from);
  void MergeFrom(const c1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(c1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.c1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static c1* default_instance_;
};
// -------------------------------------------------------------------

class AAAA : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.AAAA) */ {
 public:
  AAAA();
  virtual ~AAAA();

  AAAA(const AAAA& from);

  inline AAAA& operator=(const AAAA& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AAAA& default_instance();

  void Swap(AAAA* other);

  // implements Message ----------------------------------------------

  inline AAAA* New() const { return New(NULL); }

  AAAA* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AAAA& from);
  void MergeFrom(const AAAA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AAAA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.AAAA)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static AAAA* default_instance_;
};
// -------------------------------------------------------------------

class Imagine_Rpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.Imagine_Rpc) */ {
 public:
  Imagine_Rpc();
  virtual ~Imagine_Rpc();

  Imagine_Rpc(const Imagine_Rpc& from);

  inline Imagine_Rpc& operator=(const Imagine_Rpc& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imagine_Rpc& default_instance();

  void Swap(Imagine_Rpc* other);

  // implements Message ----------------------------------------------

  inline Imagine_Rpc* New() const { return New(NULL); }

  Imagine_Rpc* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Imagine_Rpc& from);
  void MergeFrom(const Imagine_Rpc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Imagine_Rpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message1.Imagine_Rpc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Imagine_Rpc* default_instance_;
};
// -------------------------------------------------------------------

class TTTT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message1.TTTT) */ {
 public:
  TTTT();
  virtual ~TTTT();

  TTTT(const TTTT& from);

  inline TTTT& operator=(const TTTT& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTTT& default_instance();

  void Swap(TTTT* other);

  // implements Message ----------------------------------------------

  inline TTTT* New() const { return New(NULL); }

  TTTT* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTTT& from);
  void MergeFrom(const TTTT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TTTT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message1.InternalMessage.Identity taaa = 2;
  void clear_taaa();
  static const int kTaaaFieldNumber = 2;
  ::message1::InternalMessage_Identity taaa() const;
  void set_taaa(::message1::InternalMessage_Identity value);

  // @@protoc_insertion_point(class_scope:message1.TTTT)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int taaa_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static TTTT* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// c_c1_c2_c3_c3

// -------------------------------------------------------------------

// c_c1_c2_c3

// -------------------------------------------------------------------

// c_c1_c2

// optional .message1.c.c1.c2 kk = 1;
inline bool c_c1_c2::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
inline void c_c1_c2::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
inline const ::message1::c_c1_c2& c_c1_c2::kk() const {
  // @@protoc_insertion_point(field_get:message1.c.c1.c2.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
inline ::message1::c_c1_c2* c_c1_c2::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::c_c1_c2;
  }
  // @@protoc_insertion_point(field_mutable:message1.c.c1.c2.kk)
  return kk_;
}
inline ::message1::c_c1_c2* c_c1_c2::release_kk() {
  // @@protoc_insertion_point(field_release:message1.c.c1.c2.kk)
  
  ::message1::c_c1_c2* temp = kk_;
  kk_ = NULL;
  return temp;
}
inline void c_c1_c2::set_allocated_kk(::message1::c_c1_c2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.c.c1.c2.kk)
}

// -------------------------------------------------------------------

// c_c1

// -------------------------------------------------------------------

// c

// -------------------------------------------------------------------

// InternalMessage_a1_a2_a3

// optional .message1.InternalMessage.a1.a2 kk = 33;
inline bool InternalMessage_a1_a2_a3::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
inline void InternalMessage_a1_a2_a3::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
inline const ::message1::InternalMessage_a1_a2& InternalMessage_a1_a2_a3::kk() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.a1.a2.a3.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
inline ::message1::InternalMessage_a1_a2* InternalMessage_a1_a2_a3::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::InternalMessage_a1_a2;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.a1.a2.a3.kk)
  return kk_;
}
inline ::message1::InternalMessage_a1_a2* InternalMessage_a1_a2_a3::release_kk() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.a1.a2.a3.kk)
  
  ::message1::InternalMessage_a1_a2* temp = kk_;
  kk_ = NULL;
  return temp;
}
inline void InternalMessage_a1_a2_a3::set_allocated_kk(::message1::InternalMessage_a1_a2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.a1.a2.a3.kk)
}

// -------------------------------------------------------------------

// InternalMessage_a1_a2

// -------------------------------------------------------------------

// InternalMessage_a1

// -------------------------------------------------------------------

// InternalMessage

// optional .message1.TTTT TTTT = 101003;
inline bool InternalMessage::has_tttt() const {
  return !_is_default_instance_ && tttt_ != NULL;
}
inline void InternalMessage::clear_tttt() {
  if (GetArenaNoVirtual() == NULL && tttt_ != NULL) delete tttt_;
  tttt_ = NULL;
}
inline const ::message1::TTTT& InternalMessage::tttt() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.TTTT)
  return tttt_ != NULL ? *tttt_ : *default_instance_->tttt_;
}
inline ::message1::TTTT* InternalMessage::mutable_tttt() {
  
  if (tttt_ == NULL) {
    tttt_ = new ::message1::TTTT;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.TTTT)
  return tttt_;
}
inline ::message1::TTTT* InternalMessage::release_tttt() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.TTTT)
  
  ::message1::TTTT* temp = tttt_;
  tttt_ = NULL;
  return temp;
}
inline void InternalMessage::set_allocated_tttt(::message1::TTTT* tttt) {
  delete tttt_;
  tttt_ = tttt;
  if (tttt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.TTTT)
}

// optional .message1.InternalMessage.a1.a2 kk = 33333;
inline bool InternalMessage::has_kk() const {
  return !_is_default_instance_ && kk_ != NULL;
}
inline void InternalMessage::clear_kk() {
  if (GetArenaNoVirtual() == NULL && kk_ != NULL) delete kk_;
  kk_ = NULL;
}
inline const ::message1::InternalMessage_a1_a2& InternalMessage::kk() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.kk)
  return kk_ != NULL ? *kk_ : *default_instance_->kk_;
}
inline ::message1::InternalMessage_a1_a2* InternalMessage::mutable_kk() {
  
  if (kk_ == NULL) {
    kk_ = new ::message1::InternalMessage_a1_a2;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.kk)
  return kk_;
}
inline ::message1::InternalMessage_a1_a2* InternalMessage::release_kk() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.kk)
  
  ::message1::InternalMessage_a1_a2* temp = kk_;
  kk_ = NULL;
  return temp;
}
inline void InternalMessage::set_allocated_kk(::message1::InternalMessage_a1_a2* kk) {
  delete kk_;
  kk_ = kk;
  if (kk) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.kk)
}

// optional .message1.AAAA cbcbcbcbcbcbcbc = 1000;
inline bool InternalMessage::has_cbcbcbcbcbcbcbc() const {
  return !_is_default_instance_ && cbcbcbcbcbcbcbc_ != NULL;
}
inline void InternalMessage::clear_cbcbcbcbcbcbcbc() {
  if (GetArenaNoVirtual() == NULL && cbcbcbcbcbcbcbc_ != NULL) delete cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = NULL;
}
inline const ::message1::AAAA& InternalMessage::cbcbcbcbcbcbcbc() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.cbcbcbcbcbcbcbc)
  return cbcbcbcbcbcbcbc_ != NULL ? *cbcbcbcbcbcbcbc_ : *default_instance_->cbcbcbcbcbcbcbc_;
}
inline ::message1::AAAA* InternalMessage::mutable_cbcbcbcbcbcbcbc() {
  
  if (cbcbcbcbcbcbcbc_ == NULL) {
    cbcbcbcbcbcbcbc_ = new ::message1::AAAA;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.cbcbcbcbcbcbcbc)
  return cbcbcbcbcbcbcbc_;
}
inline ::message1::AAAA* InternalMessage::release_cbcbcbcbcbcbcbc() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.cbcbcbcbcbcbcbc)
  
  ::message1::AAAA* temp = cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = NULL;
  return temp;
}
inline void InternalMessage::set_allocated_cbcbcbcbcbcbcbc(::message1::AAAA* cbcbcbcbcbcbcbc) {
  delete cbcbcbcbcbcbcbc_;
  cbcbcbcbcbcbcbc_ = cbcbcbcbcbcbcbc;
  if (cbcbcbcbcbcbcbc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.cbcbcbcbcbcbcbc)
}

// optional .message1.InternalMessage.Identity send_identity_ = 1;
inline void InternalMessage::clear_send_identity_() {
  send_identity__ = 0;
}
inline ::message1::InternalMessage_Identity InternalMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.send_identity_)
  return static_cast< ::message1::InternalMessage_Identity >(send_identity__);
}
inline void InternalMessage::set_send_identity_(::message1::InternalMessage_Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.send_identity_)
}

// optional .message1.InternalMessage.Identity recv_identity_ = 2;
inline void InternalMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
inline ::message1::InternalMessage_Identity InternalMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.recv_identity_)
  return static_cast< ::message1::InternalMessage_Identity >(recv_identity__);
}
inline void InternalMessage::set_recv_identity_(::message1::InternalMessage_Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.recv_identity_)
}

// optional string service_name_ = 3;
inline void InternalMessage::clear_service_name_() {
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::service_name_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.service_name_)
  return service_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_service_name_(const ::std::string& value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.service_name_)
}
inline void InternalMessage::set_service_name_(const char* value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.service_name_)
}
inline void InternalMessage::set_service_name_(const char* value, size_t size) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.service_name_)
}
inline ::std::string* InternalMessage::mutable_service_name_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.service_name_)
  return service_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_service_name_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.service_name_)
  
  return service_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_service_name_(::std::string* service_name_) {
  if (service_name_ != NULL) {
    
  } else {
    
  }
  service_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.service_name_)
}

// optional string method_name_ = 4;
inline void InternalMessage::clear_method_name_() {
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::method_name_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.method_name_)
  return method_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_method_name_(const ::std::string& value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.method_name_)
}
inline void InternalMessage::set_method_name_(const char* value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.method_name_)
}
inline void InternalMessage::set_method_name_(const char* value, size_t size) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.method_name_)
}
inline ::std::string* InternalMessage::mutable_method_name_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.method_name_)
  return method_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_method_name_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.method_name_)
  
  return method_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_method_name_(::std::string* method_name_) {
  if (method_name_ != NULL) {
    
  } else {
    
  }
  method_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.method_name_)
}

// optional .message1.InternalMessage.Request request_type_ = 6;
inline void InternalMessage::clear_request_type_() {
  request_type__ = 0;
}
inline ::message1::InternalMessage_Request InternalMessage::request_type_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.request_type_)
  return static_cast< ::message1::InternalMessage_Request >(request_type__);
}
inline void InternalMessage::set_request_type_(::message1::InternalMessage_Request value) {
  
  request_type__ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.request_type_)
}

// optional string server_ip_ = 9;
inline void InternalMessage::clear_server_ip_() {
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::server_ip_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.server_ip_)
  return server_ip__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_server_ip_(const ::std::string& value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.server_ip_)
}
inline void InternalMessage::set_server_ip_(const char* value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.server_ip_)
}
inline void InternalMessage::set_server_ip_(const char* value, size_t size) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.server_ip_)
}
inline ::std::string* InternalMessage::mutable_server_ip_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.server_ip_)
  return server_ip__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_server_ip_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.server_ip_)
  
  return server_ip__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_server_ip_(::std::string* server_ip_) {
  if (server_ip_ != NULL) {
    
  } else {
    
  }
  server_ip__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.server_ip_)
}

// optional string server_port_ = 10;
inline void InternalMessage::clear_server_port_() {
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::server_port_() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.server_port_)
  return server_port__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_server_port_(const ::std::string& value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message1.InternalMessage.server_port_)
}
inline void InternalMessage::set_server_port_(const char* value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message1.InternalMessage.server_port_)
}
inline void InternalMessage::set_server_port_(const char* value, size_t size) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message1.InternalMessage.server_port_)
}
inline ::std::string* InternalMessage::mutable_server_port_() {
  
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.server_port_)
  return server_port__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_server_port_() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.server_port_)
  
  return server_port__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_server_port_(::std::string* server_port_) {
  if (server_port_ != NULL) {
    
  } else {
    
  }
  server_port__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_port_);
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.server_port_)
}

// optional .message1.TTTT ABCDEFG = 100000;
inline bool InternalMessage::has_abcdefg() const {
  return !_is_default_instance_ && abcdefg_ != NULL;
}
inline void InternalMessage::clear_abcdefg() {
  if (GetArenaNoVirtual() == NULL && abcdefg_ != NULL) delete abcdefg_;
  abcdefg_ = NULL;
}
inline const ::message1::TTTT& InternalMessage::abcdefg() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.ABCDEFG)
  return abcdefg_ != NULL ? *abcdefg_ : *default_instance_->abcdefg_;
}
inline ::message1::TTTT* InternalMessage::mutable_abcdefg() {
  
  if (abcdefg_ == NULL) {
    abcdefg_ = new ::message1::TTTT;
  }
  // @@protoc_insertion_point(field_mutable:message1.InternalMessage.ABCDEFG)
  return abcdefg_;
}
inline ::message1::TTTT* InternalMessage::release_abcdefg() {
  // @@protoc_insertion_point(field_release:message1.InternalMessage.ABCDEFG)
  
  ::message1::TTTT* temp = abcdefg_;
  abcdefg_ = NULL;
  return temp;
}
inline void InternalMessage::set_allocated_abcdefg(::message1::TTTT* abcdefg) {
  delete abcdefg_;
  abcdefg_ = abcdefg;
  if (abcdefg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message1.InternalMessage.ABCDEFG)
}

// optional .message1.InternalMessage.Identity FFFFFFFFFF = 3333;
inline void InternalMessage::clear_ffffffffff() {
  ffffffffff_ = 0;
}
inline ::message1::InternalMessage_Identity InternalMessage::ffffffffff() const {
  // @@protoc_insertion_point(field_get:message1.InternalMessage.FFFFFFFFFF)
  return static_cast< ::message1::InternalMessage_Identity >(ffffffffff_);
}
inline void InternalMessage::set_ffffffffff(::message1::InternalMessage_Identity value) {
  
  ffffffffff_ = value;
  // @@protoc_insertion_point(field_set:message1.InternalMessage.FFFFFFFFFF)
}

// -------------------------------------------------------------------

// c1

// -------------------------------------------------------------------

// AAAA

// -------------------------------------------------------------------

// Imagine_Rpc

// -------------------------------------------------------------------

// TTTT

// optional .message1.InternalMessage.Identity taaa = 2;
inline void TTTT::clear_taaa() {
  taaa_ = 0;
}
inline ::message1::InternalMessage_Identity TTTT::taaa() const {
  // @@protoc_insertion_point(field_get:message1.TTTT.taaa)
  return static_cast< ::message1::InternalMessage_Identity >(taaa_);
}
inline void TTTT::set_taaa(::message1::InternalMessage_Identity value) {
  
  taaa_ = value;
  // @@protoc_insertion_point(field_set:message1.TTTT.taaa)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message1

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message1::InternalMessage_Request> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message1::InternalMessage_Request>() {
  return ::message1::InternalMessage_Request_descriptor();
}
template <> struct is_proto_enum< ::message1::InternalMessage_Identity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message1::InternalMessage_Identity>() {
  return ::message1::InternalMessage_Identity_descriptor();
}
template <> struct is_proto_enum< ::message1::aslkfj> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message1::aslkfj>() {
  return ::message1::aslkfj_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
