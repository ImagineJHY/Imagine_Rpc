// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InternalMessage.proto

#ifndef PROTOBUF_InternalMessage_2eproto__INCLUDED
#define PROTOBUF_InternalMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Imagine_Rpc {
namespace Internal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_InternalMessage_2eproto();
void protobuf_AssignDesc_InternalMessage_2eproto();
void protobuf_ShutdownFile_InternalMessage_2eproto();

class InternalMessage;

enum InternalMessage_Request {
  InternalMessage_Request_Register = 0,
  InternalMessage_Request_DeRegister = 1,
  InternalMessage_Request_Heartbeat = 2,
  InternalMessage_Request_Search = 3,
  InternalMessage_Request_Response = 4,
  InternalMessage_Request_InternalMessage_Request_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InternalMessage_Request_InternalMessage_Request_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InternalMessage_Request_IsValid(int value);
const InternalMessage_Request InternalMessage_Request_Request_MIN = InternalMessage_Request_Register;
const InternalMessage_Request InternalMessage_Request_Request_MAX = InternalMessage_Request_Response;
const int InternalMessage_Request_Request_ARRAYSIZE = InternalMessage_Request_Request_MAX + 1;

const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor();
inline const ::std::string& InternalMessage_Request_Name(InternalMessage_Request value) {
  return ::google::protobuf::internal::NameOfEnum(
    InternalMessage_Request_descriptor(), value);
}
inline bool InternalMessage_Request_Parse(
    const ::std::string& name, InternalMessage_Request* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InternalMessage_Request>(
    InternalMessage_Request_descriptor(), name, value);
}
enum InternalMessage_Identity {
  InternalMessage_Identity_Client = 0,
  InternalMessage_Identity_Server = 1,
  InternalMessage_Identity_ZooKeeper = 2,
  InternalMessage_Identity_InternalMessage_Identity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InternalMessage_Identity_InternalMessage_Identity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InternalMessage_Identity_IsValid(int value);
const InternalMessage_Identity InternalMessage_Identity_Identity_MIN = InternalMessage_Identity_Client;
const InternalMessage_Identity InternalMessage_Identity_Identity_MAX = InternalMessage_Identity_ZooKeeper;
const int InternalMessage_Identity_Identity_ARRAYSIZE = InternalMessage_Identity_Identity_MAX + 1;

const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor();
inline const ::std::string& InternalMessage_Identity_Name(InternalMessage_Identity value) {
  return ::google::protobuf::internal::NameOfEnum(
    InternalMessage_Identity_descriptor(), value);
}
inline bool InternalMessage_Identity_Parse(
    const ::std::string& name, InternalMessage_Identity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InternalMessage_Identity>(
    InternalMessage_Identity_descriptor(), name, value);
}
// ===================================================================

class InternalMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Imagine_Rpc.Internal.InternalMessage) */ {
 public:
  InternalMessage();
  virtual ~InternalMessage();

  InternalMessage(const InternalMessage& from);

  inline InternalMessage& operator=(const InternalMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalMessage& default_instance();

  void Swap(InternalMessage* other);

  // implements Message ----------------------------------------------

  inline InternalMessage* New() const { return New(NULL); }

  InternalMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InternalMessage& from);
  void MergeFrom(const InternalMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InternalMessage_Request Request;
  static const Request Register =
    InternalMessage_Request_Register;
  static const Request DeRegister =
    InternalMessage_Request_DeRegister;
  static const Request Heartbeat =
    InternalMessage_Request_Heartbeat;
  static const Request Search =
    InternalMessage_Request_Search;
  static const Request Response =
    InternalMessage_Request_Response;
  static inline bool Request_IsValid(int value) {
    return InternalMessage_Request_IsValid(value);
  }
  static const Request Request_MIN =
    InternalMessage_Request_Request_MIN;
  static const Request Request_MAX =
    InternalMessage_Request_Request_MAX;
  static const int Request_ARRAYSIZE =
    InternalMessage_Request_Request_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Request_descriptor() {
    return InternalMessage_Request_descriptor();
  }
  static inline const ::std::string& Request_Name(Request value) {
    return InternalMessage_Request_Name(value);
  }
  static inline bool Request_Parse(const ::std::string& name,
      Request* value) {
    return InternalMessage_Request_Parse(name, value);
  }

  typedef InternalMessage_Identity Identity;
  static const Identity Client =
    InternalMessage_Identity_Client;
  static const Identity Server =
    InternalMessage_Identity_Server;
  static const Identity ZooKeeper =
    InternalMessage_Identity_ZooKeeper;
  static inline bool Identity_IsValid(int value) {
    return InternalMessage_Identity_IsValid(value);
  }
  static const Identity Identity_MIN =
    InternalMessage_Identity_Identity_MIN;
  static const Identity Identity_MAX =
    InternalMessage_Identity_Identity_MAX;
  static const int Identity_ARRAYSIZE =
    InternalMessage_Identity_Identity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Identity_descriptor() {
    return InternalMessage_Identity_descriptor();
  }
  static inline const ::std::string& Identity_Name(Identity value) {
    return InternalMessage_Identity_Name(value);
  }
  static inline bool Identity_Parse(const ::std::string& name,
      Identity* value) {
    return InternalMessage_Identity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
  void clear_send_identity_();
  static const int kSendIdentityFieldNumber = 1;
  ::Imagine_Rpc::Internal::InternalMessage_Identity send_identity_() const;
  void set_send_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value);

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
  void clear_recv_identity_();
  static const int kRecvIdentityFieldNumber = 2;
  ::Imagine_Rpc::Internal::InternalMessage_Identity recv_identity_() const;
  void set_recv_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value);

  // optional string service_name_ = 3;
  void clear_service_name_();
  static const int kServiceNameFieldNumber = 3;
  const ::std::string& service_name_() const;
  void set_service_name_(const ::std::string& value);
  void set_service_name_(const char* value);
  void set_service_name_(const char* value, size_t size);
  ::std::string* mutable_service_name_();
  ::std::string* release_service_name_();
  void set_allocated_service_name_(::std::string* service_name_);

  // optional string method_name_ = 4;
  void clear_method_name_();
  static const int kMethodNameFieldNumber = 4;
  const ::std::string& method_name_() const;
  void set_method_name_(const ::std::string& value);
  void set_method_name_(const char* value);
  void set_method_name_(const char* value, size_t size);
  ::std::string* mutable_method_name_();
  ::std::string* release_method_name_();
  void set_allocated_method_name_(::std::string* method_name_);

  // optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
  void clear_request_type_();
  static const int kRequestTypeFieldNumber = 6;
  ::Imagine_Rpc::Internal::InternalMessage_Request request_type_() const;
  void set_request_type_(::Imagine_Rpc::Internal::InternalMessage_Request value);

  // optional string server_ip_ = 9;
  void clear_server_ip_();
  static const int kServerIpFieldNumber = 9;
  const ::std::string& server_ip_() const;
  void set_server_ip_(const ::std::string& value);
  void set_server_ip_(const char* value);
  void set_server_ip_(const char* value, size_t size);
  ::std::string* mutable_server_ip_();
  ::std::string* release_server_ip_();
  void set_allocated_server_ip_(::std::string* server_ip_);

  // optional string server_port_ = 10;
  void clear_server_port_();
  static const int kServerPortFieldNumber = 10;
  const ::std::string& server_port_() const;
  void set_server_port_(const ::std::string& value);
  void set_server_port_(const char* value);
  void set_server_port_(const char* value, size_t size);
  ::std::string* mutable_server_port_();
  ::std::string* release_server_port_();
  void set_allocated_server_port_(::std::string* server_port_);

  // @@protoc_insertion_point(class_scope:Imagine_Rpc.Internal.InternalMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int send_identity__;
  int recv_identity__;
  ::google::protobuf::internal::ArenaStringPtr service_name__;
  ::google::protobuf::internal::ArenaStringPtr method_name__;
  ::google::protobuf::internal::ArenaStringPtr server_ip__;
  ::google::protobuf::internal::ArenaStringPtr server_port__;
  int request_type__;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_InternalMessage_2eproto();
  friend void protobuf_AssignDesc_InternalMessage_2eproto();
  friend void protobuf_ShutdownFile_InternalMessage_2eproto();

  void InitAsDefaultInstance();
  static InternalMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InternalMessage

// optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
inline void InternalMessage::clear_send_identity_() {
  send_identity__ = 0;
}
inline ::Imagine_Rpc::Internal::InternalMessage_Identity InternalMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.send_identity_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(send_identity__);
}
inline void InternalMessage::set_send_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.send_identity_)
}

// optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
inline void InternalMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
inline ::Imagine_Rpc::Internal::InternalMessage_Identity InternalMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.recv_identity_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(recv_identity__);
}
inline void InternalMessage::set_recv_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.recv_identity_)
}

// optional string service_name_ = 3;
inline void InternalMessage::clear_service_name_() {
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::service_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.service_name_)
  return service_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_service_name_(const ::std::string& value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
inline void InternalMessage::set_service_name_(const char* value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
inline void InternalMessage::set_service_name_(const char* value, size_t size) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
inline ::std::string* InternalMessage::mutable_service_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.service_name_)
  return service_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_service_name_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.service_name_)
  
  return service_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_service_name_(::std::string* service_name_) {
  if (service_name_ != NULL) {
    
  } else {
    
  }
  service_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.service_name_)
}

// optional string method_name_ = 4;
inline void InternalMessage::clear_method_name_() {
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::method_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.method_name_)
  return method_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_method_name_(const ::std::string& value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
inline void InternalMessage::set_method_name_(const char* value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
inline void InternalMessage::set_method_name_(const char* value, size_t size) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
inline ::std::string* InternalMessage::mutable_method_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.method_name_)
  return method_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_method_name_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.method_name_)
  
  return method_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_method_name_(::std::string* method_name_) {
  if (method_name_ != NULL) {
    
  } else {
    
  }
  method_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.method_name_)
}

// optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
inline void InternalMessage::clear_request_type_() {
  request_type__ = 0;
}
inline ::Imagine_Rpc::Internal::InternalMessage_Request InternalMessage::request_type_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.request_type_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Request >(request_type__);
}
inline void InternalMessage::set_request_type_(::Imagine_Rpc::Internal::InternalMessage_Request value) {
  
  request_type__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.request_type_)
}

// optional string server_ip_ = 9;
inline void InternalMessage::clear_server_ip_() {
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::server_ip_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  return server_ip__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_server_ip_(const ::std::string& value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
inline void InternalMessage::set_server_ip_(const char* value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
inline void InternalMessage::set_server_ip_(const char* value, size_t size) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
inline ::std::string* InternalMessage::mutable_server_ip_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  return server_ip__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_server_ip_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  
  return server_ip__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_server_ip_(::std::string* server_ip_) {
  if (server_ip_ != NULL) {
    
  } else {
    
  }
  server_ip__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}

// optional string server_port_ = 10;
inline void InternalMessage::clear_server_port_() {
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalMessage::server_port_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.server_port_)
  return server_port__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_server_port_(const ::std::string& value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
inline void InternalMessage::set_server_port_(const char* value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
inline void InternalMessage::set_server_port_(const char* value, size_t size) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
inline ::std::string* InternalMessage::mutable_server_port_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.server_port_)
  return server_port__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalMessage::release_server_port_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.server_port_)
  
  return server_port__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalMessage::set_allocated_server_port_(::std::string* server_port_) {
  if (server_port_ != NULL) {
    
  } else {
    
  }
  server_port__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_port_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.server_port_)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Imagine_Rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Imagine_Rpc::Internal::InternalMessage_Request> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Imagine_Rpc::Internal::InternalMessage_Request>() {
  return ::Imagine_Rpc::Internal::InternalMessage_Request_descriptor();
}
template <> struct is_proto_enum< ::Imagine_Rpc::Internal::InternalMessage_Identity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Imagine_Rpc::Internal::InternalMessage_Identity>() {
  return ::Imagine_Rpc::Internal::InternalMessage_Identity_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InternalMessage_2eproto__INCLUDED
