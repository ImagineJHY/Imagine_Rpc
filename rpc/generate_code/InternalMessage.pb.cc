// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InternalMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InternalMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Imagine_Rpc {
namespace Internal {

namespace {

const ::google::protobuf::Descriptor* InternalMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InternalMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_InternalMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_InternalMessage_2eproto() {
  protobuf_AddDesc_InternalMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "InternalMessage.proto");
  GOOGLE_CHECK(file != NULL);
  InternalMessage_descriptor_ = file->message_type(0);
  static const int InternalMessage_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, service_name__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, method_name__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, request_type__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, server_ip__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, server_port__),
  };
  InternalMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InternalMessage_descriptor_,
      InternalMessage::default_instance_,
      InternalMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(InternalMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InternalMessage, _is_default_instance_));
  InternalMessage_Request_descriptor_ = InternalMessage_descriptor_->enum_type(0);
  InternalMessage_Identity_descriptor_ = InternalMessage_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_InternalMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InternalMessage_descriptor_, &InternalMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_InternalMessage_2eproto() {
  delete InternalMessage::default_instance_;
  delete InternalMessage_reflection_;
}

void protobuf_AddDesc_InternalMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_InternalMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025InternalMessage.proto\022\024Imagine_Rpc.Int"
    "ernal\"\303\003\n\017InternalMessage\022F\n\016send_identi"
    "ty_\030\001 \001(\0162..Imagine_Rpc.Internal.Interna"
    "lMessage.Identity\022F\n\016recv_identity_\030\002 \001("
    "\0162..Imagine_Rpc.Internal.InternalMessage"
    ".Identity\022\025\n\rservice_name_\030\003 \001(\t\022\024\n\014meth"
    "od_name_\030\004 \001(\t\022D\n\rrequest_type_\030\006 \001(\0162-."
    "Imagine_Rpc.Internal.InternalMessage.Req"
    "uest\022\022\n\nserver_ip_\030\t \001(\t\022\024\n\014server_port_"
    "\030\n \001(\t\"P\n\007Request\022\014\n\010Register\020\000\022\016\n\nDeReg"
    "ister\020\001\022\r\n\tHeartbeat\020\002\022\n\n\006Search\020\003\022\014\n\010Re"
    "sponse\020\004\"1\n\010Identity\022\n\n\006Client\020\000\022\n\n\006Serv"
    "er\020\001\022\r\n\tZooKeeper\020\002b\006proto3", 507);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InternalMessage.proto", &protobuf_RegisterTypes);
  InternalMessage::default_instance_ = new InternalMessage();
  InternalMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_InternalMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_InternalMessage_2eproto {
  StaticDescriptorInitializer_InternalMessage_2eproto() {
    protobuf_AddDesc_InternalMessage_2eproto();
  }
} static_descriptor_initializer_InternalMessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* InternalMessage_Request_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_Request_descriptor_;
}
bool InternalMessage_Request_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InternalMessage_Request InternalMessage::Register;
const InternalMessage_Request InternalMessage::DeRegister;
const InternalMessage_Request InternalMessage::Heartbeat;
const InternalMessage_Request InternalMessage::Search;
const InternalMessage_Request InternalMessage::Response;
const InternalMessage_Request InternalMessage::Request_MIN;
const InternalMessage_Request InternalMessage::Request_MAX;
const int InternalMessage::Request_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InternalMessage_Identity_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_Identity_descriptor_;
}
bool InternalMessage_Identity_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InternalMessage_Identity InternalMessage::Client;
const InternalMessage_Identity InternalMessage::Server;
const InternalMessage_Identity InternalMessage::ZooKeeper;
const InternalMessage_Identity InternalMessage::Identity_MIN;
const InternalMessage_Identity InternalMessage::Identity_MAX;
const int InternalMessage::Identity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InternalMessage::kSendIdentityFieldNumber;
const int InternalMessage::kRecvIdentityFieldNumber;
const int InternalMessage::kServiceNameFieldNumber;
const int InternalMessage::kMethodNameFieldNumber;
const int InternalMessage::kRequestTypeFieldNumber;
const int InternalMessage::kServerIpFieldNumber;
const int InternalMessage::kServerPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMessage::InternalMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Imagine_Rpc.Internal.InternalMessage)
}

void InternalMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InternalMessage::InternalMessage(const InternalMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Imagine_Rpc.Internal.InternalMessage)
}

void InternalMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  send_identity__ = 0;
  recv_identity__ = 0;
  service_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_type__ = 0;
  server_ip__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InternalMessage::~InternalMessage() {
  // @@protoc_insertion_point(destructor:Imagine_Rpc.Internal.InternalMessage)
  SharedDtor();
}

void InternalMessage::SharedDtor() {
  service_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InternalMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InternalMessage_descriptor_;
}

const InternalMessage& InternalMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_InternalMessage_2eproto();
  return *default_instance_;
}

InternalMessage* InternalMessage::default_instance_ = NULL;

InternalMessage* InternalMessage::New(::google::protobuf::Arena* arena) const {
  InternalMessage* n = new InternalMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Imagine_Rpc.Internal.InternalMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InternalMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InternalMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, recv_identity__);
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_type__ = 0;
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool InternalMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Imagine_Rpc.Internal.InternalMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_service_name_;
        break;
      }

      // optional string service_name_ = 3;
      case 3: {
        if (tag == 26) {
         parse_service_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name_().data(), this->service_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_Rpc.Internal.InternalMessage.service_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_method_name_;
        break;
      }

      // optional string method_name_ = 4;
      case 4: {
        if (tag == 34) {
         parse_method_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method_name_().data(), this->method_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_Rpc.Internal.InternalMessage.method_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_request_type_;
        break;
      }

      // optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
      case 6: {
        if (tag == 48) {
         parse_request_type_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_type_(static_cast< ::Imagine_Rpc::Internal::InternalMessage_Request >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_server_ip_;
        break;
      }

      // optional string server_ip_ = 9;
      case 9: {
        if (tag == 74) {
         parse_server_ip_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_ip_().data(), this->server_ip_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_Rpc.Internal.InternalMessage.server_ip_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_server_port_;
        break;
      }

      // optional string server_port_ = 10;
      case 10: {
        if (tag == 82) {
         parse_server_port_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_port_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_port_().data(), this->server_port_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_Rpc.Internal.InternalMessage.server_port_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Imagine_Rpc.Internal.InternalMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Imagine_Rpc.Internal.InternalMessage)
  return false;
#undef DO_
}

void InternalMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Imagine_Rpc.Internal.InternalMessage)
  // optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name_().data(), this->service_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.service_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_name_(), output);
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name_().data(), this->method_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.method_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->method_name_(), output);
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->request_type_(), output);
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip_().data(), this->server_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.server_ip_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->server_ip_(), output);
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_port_().data(), this->server_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.server_port_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->server_port_(), output);
  }

  // @@protoc_insertion_point(serialize_end:Imagine_Rpc.Internal.InternalMessage)
}

::google::protobuf::uint8* InternalMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Imagine_Rpc.Internal.InternalMessage)
  // optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name_().data(), this->service_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.service_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_name_(), target);
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name_().data(), this->method_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.method_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->method_name_(), target);
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->request_type_(), target);
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip_().data(), this->server_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.server_ip_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->server_ip_(), target);
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_port_().data(), this->server_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_Rpc.Internal.InternalMessage.server_port_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->server_port_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Imagine_Rpc.Internal.InternalMessage)
  return target;
}

int InternalMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Imagine_Rpc.Internal.InternalMessage)
  int total_size = 0;

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional string service_name_ = 3;
  if (this->service_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name_());
  }

  // optional string method_name_ = 4;
  if (this->method_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method_name_());
  }

  // optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
  if (this->request_type_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type_());
  }

  // optional string server_ip_ = 9;
  if (this->server_ip_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_ip_());
  }

  // optional string server_port_ = 10;
  if (this->server_port_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_port_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Imagine_Rpc.Internal.InternalMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InternalMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Imagine_Rpc.Internal.InternalMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Imagine_Rpc.Internal.InternalMessage)
    MergeFrom(*source);
  }
}

void InternalMessage::MergeFrom(const InternalMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Imagine_Rpc.Internal.InternalMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.service_name_().size() > 0) {

    service_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name__);
  }
  if (from.method_name_().size() > 0) {

    method_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name__);
  }
  if (from.request_type_() != 0) {
    set_request_type_(from.request_type_());
  }
  if (from.server_ip_().size() > 0) {

    server_ip__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip__);
  }
  if (from.server_port_().size() > 0) {

    server_port__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_port__);
  }
}

void InternalMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Imagine_Rpc.Internal.InternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMessage::CopyFrom(const InternalMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Imagine_Rpc.Internal.InternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMessage::IsInitialized() const {

  return true;
}

void InternalMessage::Swap(InternalMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMessage::InternalSwap(InternalMessage* other) {
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  service_name__.Swap(&other->service_name__);
  method_name__.Swap(&other->method_name__);
  std::swap(request_type__, other->request_type__);
  server_ip__.Swap(&other->server_ip__);
  server_port__.Swap(&other->server_port__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InternalMessage_descriptor_;
  metadata.reflection = InternalMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InternalMessage

// optional .Imagine_Rpc.Internal.InternalMessage.Identity send_identity_ = 1;
void InternalMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::Imagine_Rpc::Internal::InternalMessage_Identity InternalMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.send_identity_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(send_identity__);
}
 void InternalMessage::set_send_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.send_identity_)
}

// optional .Imagine_Rpc.Internal.InternalMessage.Identity recv_identity_ = 2;
void InternalMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::Imagine_Rpc::Internal::InternalMessage_Identity InternalMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.recv_identity_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Identity >(recv_identity__);
}
 void InternalMessage::set_recv_identity_(::Imagine_Rpc::Internal::InternalMessage_Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.recv_identity_)
}

// optional string service_name_ = 3;
void InternalMessage::clear_service_name_() {
  service_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::service_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.service_name_)
  return service_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_service_name_(const ::std::string& value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
 void InternalMessage::set_service_name_(const char* value) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
 void InternalMessage::set_service_name_(const char* value, size_t size) {
  
  service_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.service_name_)
}
 ::std::string* InternalMessage::mutable_service_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.service_name_)
  return service_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_service_name_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.service_name_)
  
  return service_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_service_name_(::std::string* service_name_) {
  if (service_name_ != NULL) {
    
  } else {
    
  }
  service_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.service_name_)
}

// optional string method_name_ = 4;
void InternalMessage::clear_method_name_() {
  method_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::method_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.method_name_)
  return method_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_method_name_(const ::std::string& value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
 void InternalMessage::set_method_name_(const char* value) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
 void InternalMessage::set_method_name_(const char* value, size_t size) {
  
  method_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.method_name_)
}
 ::std::string* InternalMessage::mutable_method_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.method_name_)
  return method_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_method_name_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.method_name_)
  
  return method_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_method_name_(::std::string* method_name_) {
  if (method_name_ != NULL) {
    
  } else {
    
  }
  method_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.method_name_)
}

// optional .Imagine_Rpc.Internal.InternalMessage.Request request_type_ = 6;
void InternalMessage::clear_request_type_() {
  request_type__ = 0;
}
 ::Imagine_Rpc::Internal::InternalMessage_Request InternalMessage::request_type_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.request_type_)
  return static_cast< ::Imagine_Rpc::Internal::InternalMessage_Request >(request_type__);
}
 void InternalMessage::set_request_type_(::Imagine_Rpc::Internal::InternalMessage_Request value) {
  
  request_type__ = value;
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.request_type_)
}

// optional string server_ip_ = 9;
void InternalMessage::clear_server_ip_() {
  server_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::server_ip_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  return server_ip__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_server_ip_(const ::std::string& value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
 void InternalMessage::set_server_ip_(const char* value) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
 void InternalMessage::set_server_ip_(const char* value, size_t size) {
  
  server_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}
 ::std::string* InternalMessage::mutable_server_ip_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  return server_ip__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_server_ip_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.server_ip_)
  
  return server_ip__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_server_ip_(::std::string* server_ip_) {
  if (server_ip_ != NULL) {
    
  } else {
    
  }
  server_ip__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.server_ip_)
}

// optional string server_port_ = 10;
void InternalMessage::clear_server_port_() {
  server_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InternalMessage::server_port_() const {
  // @@protoc_insertion_point(field_get:Imagine_Rpc.Internal.InternalMessage.server_port_)
  return server_port__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_server_port_(const ::std::string& value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
 void InternalMessage::set_server_port_(const char* value) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
 void InternalMessage::set_server_port_(const char* value, size_t size) {
  
  server_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_Rpc.Internal.InternalMessage.server_port_)
}
 ::std::string* InternalMessage::mutable_server_port_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_Rpc.Internal.InternalMessage.server_port_)
  return server_port__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InternalMessage::release_server_port_() {
  // @@protoc_insertion_point(field_release:Imagine_Rpc.Internal.InternalMessage.server_port_)
  
  return server_port__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InternalMessage::set_allocated_server_port_(::std::string* server_port_) {
  if (server_port_ != NULL) {
    
  } else {
    
  }
  server_port__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_port_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_Rpc.Internal.InternalMessage.server_port_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Imagine_Rpc

// @@protoc_insertion_point(global_scope)
